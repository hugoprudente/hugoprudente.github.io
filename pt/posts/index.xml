<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on Hugo Prudente</title>
        <link>/pt/posts/</link>
        <description>Recent content in Posts on Hugo Prudente</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <copyright>MIT License</copyright>
        <lastBuildDate>Fri, 10 Jan 2020 10:38:03 +0000</lastBuildDate>
        <atom:link href="/pt/posts/index.xml" rel="self" type="application/rss+xml" />
        
        <item>
            <title>A maneira mais rápida de deletar um grande número arquivos</title>
            <link>/pt/2020/01/a-maneira-mais-r%C3%A1pida-de-deletar-um-grande-n%C3%BAmero-arquivos/</link>
            <pubDate>Fri, 10 Jan 2020 10:38:03 +0000</pubDate>
            
            <guid>/pt/2020/01/a-maneira-mais-r%C3%A1pida-de-deletar-um-grande-n%C3%BAmero-arquivos/</guid>
            <description>Muitos anos atrás, devido a um erro no código da aplicação que trabalhavamos acabamos gerando aproximadamente 10 milhões de arquivos, acabando com os inodes do sistema. Devido aquele servidor não ter alta disponibilidade no momento fui a procura do ganso dos ovos de ouro e achei isso aqui.
Infelizmente o artigo original não está mais disponível, mas desse em dia em diante rsync é minha ferramenta principal de destruição em massa!</description>
            <content type="html"><![CDATA[<p>Muitos anos atrás, devido a um erro no código da aplicação que trabalhavamos acabamos gerando aproximadamente 10 milhões de arquivos, acabando com os <code>inodes</code> do sistema. Devido aquele servidor não ter alta disponibilidade no momento fui a procura do ganso dos ovos de ouro e achei isso aqui.</p>
<p>Infelizmente o artigo original não está mais disponível, mas desse em dia em diante <code>rsync</code> é minha ferramenta principal de destruição em massa!</p>
<hr>
<h2 id="benchmark">Benchmark</h2>
<p>Alguns dias atrás,  <a href="https://www.quora.com/profile/Keith-Winstein">Keith-Winstein</a> respondeu o <a href="https://www.quora.com/How-can-someone-rapidly-delete-400-000-files">Quora Posts</a>, informando que meu benchmark não poderia ser reproduzido e que os tempos de delecção estavam muito lentos. Para ficar mais claro, pois naquele momento me computador poderia estar sobre carga, e poderia conter alguns erros eu refiz. Agora com uma nova máquina de rack, usando o  <code>/usr/bin/time</code> para um resultado mais refinado.</p>
<p>(O número de arquivos é 1000000. E cada um contém 0 de tamanho.)</p>
<table>
<thead>
<tr>
<th>Command</th>
<th>Elapsed</th>
<th>System Time</th>
<th>%CPU</th>
<th>cs (Vol/Invol)</th>
</tr>
</thead>
<tbody>
<tr>
<td>rsync -a –delete empty/ a</td>
<td>10.60</td>
<td>1.31</td>
<td>95</td>
<td>106/22</td>
</tr>
<tr>
<td>find b/ -type f -delete</td>
<td>28.51</td>
<td>14.46</td>
<td>52</td>
<td>14849/11</td>
</tr>
<tr>
<td>find c/ -type f | xargs -L 100 rm</td>
<td>41.69</td>
<td>20.60</td>
<td>54</td>
<td>37048/15074</td>
</tr>
<tr>
<td>find d/ -type f | xargs -L 100 -P 100 rm</td>
<td>34.32</td>
<td>27.82</td>
<td>89</td>
<td>929897/21720</td>
</tr>
<tr>
<td>rm -rf f</td>
<td>31.29</td>
<td>14.80</td>
<td>47</td>
<td>15134/11</td>
</tr>
</tbody>
</table>
<h3 id="sada-original">Saída Original</h3>
<pre><code># method 1
~/test $ /usr/bin/time -v  rsync -a --delete empty/ a/
        Command being timed: &quot;rsync -a --delete empty/ a/&quot;
        User time (seconds): 1.31
        System time (seconds): 10.60
        Percent of CPU this job got: 95%
        Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.42
        Average shared text size (kbytes): 0
        Average unshared data size (kbytes): 0
        Average stack size (kbytes): 0
        Average total size (kbytes): 0
        Maximum resident set size (kbytes): 0
        Average resident set size (kbytes): 0
        Major (requiring I/O) page faults: 0
        Minor (reclaiming a frame) page faults: 24378
        Voluntary context switches: 106
        Involuntary context switches: 22
        Swaps: 0
        File system inputs: 0
        File system outputs: 0
        Socket messages sent: 0
        Socket messages received: 0
        Signals delivered: 0
        Page size (bytes): 4096
        Exit status: 0

# method 2
        Command being timed: &quot;find b/ -type f -delete&quot;
        User time (seconds): 0.41
        System time (seconds): 14.46
        Percent of CPU this job got: 52%
        Elapsed (wall clock) time (h:mm:ss or m:ss): 0:28.51
        Average shared text size (kbytes): 0
        Average unshared data size (kbytes): 0
        Average stack size (kbytes): 0
        Average total size (kbytes): 0
        Maximum resident set size (kbytes): 0
        Average resident set size (kbytes): 0
        Major (requiring I/O) page faults: 0
        Minor (reclaiming a frame) page faults: 11749
        Voluntary context switches: 14849
        Involuntary context switches: 11
        Swaps: 0
        File system inputs: 0
        File system outputs: 0
        Socket messages sent: 0
        Socket messages received: 0
        Signals delivered: 0
        Page size (bytes): 4096
        Exit status: 0
# method 3
find c/ -type f | xargs -L 100 rm
~/test $ /usr/bin/time -v ./delete.sh
        Command being timed: &quot;./delete.sh&quot;
        User time (seconds): 2.06
        System time (seconds): 20.60
        Percent of CPU this job got: 54%
        Elapsed (wall clock) time (h:mm:ss or m:ss): 0:41.69
        Average shared text size (kbytes): 0
        Average unshared data size (kbytes): 0
        Average stack size (kbytes): 0
        Average total size (kbytes): 0
        Maximum resident set size (kbytes): 0
        Average resident set size (kbytes): 0
        Major (requiring I/O) page faults: 0
        Minor (reclaiming a frame) page faults: 1764225
        Voluntary context switches: 37048
        Involuntary context switches: 15074
        Swaps: 0
        File system inputs: 0
        File system outputs: 0
        Socket messages sent: 0
        Socket messages received: 0
        Signals delivered: 0
        Page size (bytes): 4096
        Exit status: 0

# method 4
find d/ -type f | xargs -L 100 -P 100 rm
~/test $ /usr/bin/time -v ./delete.sh
        Command being timed: &quot;./delete.sh&quot;
        User time (seconds): 2.86
        System time (seconds): 27.82
        Percent of CPU this job got: 89%
        Elapsed (wall clock) time (h:mm:ss or m:ss): 0:34.32
        Average shared text size (kbytes): 0
        Average unshared data size (kbytes): 0
        Average stack size (kbytes): 0
        Average total size (kbytes): 0
        Maximum resident set size (kbytes): 0
        Average resident set size (kbytes): 0
        Major (requiring I/O) page faults: 0
        Minor (reclaiming a frame) page faults: 1764278
        Voluntary context switches: 929897
        Involuntary context switches: 21720
        Swaps: 0
        File system inputs: 0
        File system outputs: 0
        Socket messages sent: 0
        Socket messages received: 0
        Signals delivered: 0
        Page size (bytes): 4096
        Exit status: 0

# method 5
~/test $ /usr/bin/time -v rm -rf f
        Command being timed: &quot;rm -rf f&quot;
        User time (seconds): 0.20
        System time (seconds): 14.80
        Percent of CPU this job got: 47%
        Elapsed (wall clock) time (h:mm:ss or m:ss): 0:31.29
        Average shared text size (kbytes): 0
        Average unshared data size (kbytes): 0
        Average stack size (kbytes): 0
        Average total size (kbytes): 0
        Maximum resident set size (kbytes): 0
        Average resident set size (kbytes): 0
        Major (requiring I/O) page faults: 0
        Minor (reclaiming a frame) page faults: 176
        Voluntary context switches: 15134
        Involuntary context switches: 11
        Swaps: 0
        File system inputs: 0
        File system outputs: 0
        Socket messages sent: 0
        Socket messages received: 0
        Signals delivered: 0
        Page size (bytes): 4096
        Exit status: 0
</code></pre><h3 id="especificao-do-hardware">Especificação do Hardware</h3>
<pre><code>Summary:        HP DL360 G7, 2 x Xeon E5620 2.40GHz, 23.5GB / 24GB 1333MHz
Processors:     2 (of 16) x Xeon E5620 2.40GHz (16 cores)
Memory:         23.5GB
Disk:           cciss/c0d0 (cciss0): 300GB (4%) RAID-10
Disk-Control:   cciss0: Hewlett-Packard Company Smart Array G6 controllers, FW 3.66
OS:             RHEL Server 5.4 (Tikanga), Linux 2.6.18-164.el5 x86_64, 64-bit
</code></pre><h2 id="benchmark-inicial">Benchmark Inicial</h2>
<p>Ontem eu vi um post muito interessante sobre métodos de deletar arquivos em um único diretório. O metodo foi enviado por Zhenyu Lee no <a href="http://www.quora.com/How-can-someone-rapidly-delete-400-000-files">http://www.quora.com/How-can-someone-rapidly-delete-400-000-files</a> e invez de utilizar xargs, Lee engenhosamente usou rsync com o &ndash;delete para sincronizar com um diretorio vazio. Após isso eu fiz uma comparacao de metodos e para minha surpresa o método de Lee era muito, mais muito, mais rápido que os outros.</p>
<table>
<thead>
<tr>
<th>Command</th>
<th># of files</th>
<th>Elapsed</th>
</tr>
</thead>
<tbody>
<tr>
<td>rsync -a –delete empty/ s1</td>
<td>1000000</td>
<td>6m50.638s</td>
</tr>
<tr>
<td>find s2/ -type f -delete</td>
<td>1000000</td>
<td>87m38.826s</td>
</tr>
<tr>
<td>find s3/ -type f | xargs -L 100 rm</td>
<td>1000000</td>
<td>83m36.851s</td>
</tr>
<tr>
<td>find s4/ -type f | xargs -L 100 -P 100 rm</td>
<td>1000000</td>
<td>78m4.658s</td>
</tr>
<tr>
<td>rm -rf s5</td>
<td>1000000</td>
<td>80m33.434s</td>
</tr>
</tbody>
</table>
<h3 id="especificao-do-hardware1">Especificação do Hardware</h3>
<pre><code>CPU: Intel(R) Core(TM)2 Duo CPU E8400 @ 3.00GHz
MEM: 4G
HD: ST3250318AS: 250G/7200RPM
</code></pre><h2 id="notas-de-rodap">Notas de Rodapé</h2>
<p>[1]: Voluntary Context Switches e Involuntary Context Switches são do /usr/bin/time</p>
<p>[2]: Como há uma pipeline, para o resultado ser o mais ácuro possivel ele foi envolto num bash script.</p>
<p>Original Post: <a href="http://linuxnote.net/jianingy/en/linux/a-fast-way-to-remove-huge-number-of-files.html">http://linuxnote.net/jianingy/en/linux/a-fast-way-to-remove-huge-number-of-files.html</a></p>
]]></content>
        </item>
        
        <item>
            <title>Sysadmin Devops Toos and Frameworks</title>
            <link>/pt/2019/12/sysadmin-devops-toos-and-frameworks/</link>
            <pubDate>Thu, 05 Dec 2019 02:21:55 +0000</pubDate>
            
            <guid>/pt/2019/12/sysadmin-devops-toos-and-frameworks/</guid>
            <description>O quanto dificil como SysAdmin/DevOps é se manter atualizado em todas as ferramentas, plataformas e frameworks disponíveis no mercado?
3 anos atrás, Jeferson Norona #LinuxTips (VAI), postou em suas redes sociais sobre um projeto onde reune e consolida as principais ferramentas e frameworks para facilitar a vida do SysAdmin/DevOps.
O projeto foi criado por Alen Krmelj e é magnífico!
http://sysadmin.it-landscape.info/</description>
            <content type="html"><![CDATA[<p>O quanto dificil como SysAdmin/DevOps é se manter atualizado em todas as ferramentas, plataformas e frameworks disponíveis no mercado?</p>
<p>3 anos atrás, <a href="https://twitter.com/badtux_">Jeferson Norona</a> #LinuxTips (VAI), postou em suas redes sociais sobre um projeto onde reune e consolida as principais ferramentas e frameworks para facilitar a vida do SysAdmin/DevOps.</p>
<p>O projeto foi criado por <a href="blackbird.si">Alen Krmelj</a> e é magnífico!</p>
<p><img src="/2019/12/itlandscape.png" alt="itlandscape.png"></p>
<p><a href="http://sysadmin.it-landscape.info/"><a href="http://sysadmin.it-landscape.info/">http://sysadmin.it-landscape.info/</a></a></p>
]]></content>
        </item>
        
    </channel>
</rss>
