<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on Hugo Prudente</title>
        <link>/en/posts/</link>
        <description>Recent content in Posts on Hugo Prudente</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <copyright>MIT License</copyright>
        <lastBuildDate>Fri, 10 Jan 2020 10:38:03 +0000</lastBuildDate>
        <atom:link href="/en/posts/index.xml" rel="self" type="application/rss+xml" />
        
        <item>
            <title>The Fastest Way to Remove Huge Number of Files</title>
            <link>/en/2020/01/the-fastest-wayt-to-remove-huge-number-of-files/</link>
            <pubDate>Fri, 10 Jan 2020 10:38:03 +0000</pubDate>
            
            <guid>/en/2020/01/the-fastest-wayt-to-remove-huge-number-of-files/</guid>
            <description>Several year ago, due to a code issue the application that I was working with wrote more than 10 millions files, exhausting all the inodes of the system. Due to that server not having replication at the time I went searching for the golden goose of the file deletion, and ended finding this.
Sadly the original article is not available anymore, but from that time now rsync is my mainly mass destruction tool!</description>
            <content type="html"><![CDATA[<p>Several year ago, due to a code issue the application that I was working with wrote more than 10 millions files, exhausting all the <code>inodes</code> of the system. Due to that server not having replication at the time I went searching for the golden goose of the file deletion, and ended finding this.</p>
<p>Sadly the original article is not available anymore, but from that time now <code>rsync</code> is my mainly mass destruction tool!</p>
<hr>
<h2 id="another-benchmark">Another Benchmark</h2>
<p>Several days ago, <a href="https://www.quora.com/profile/Keith-Winstein">Keith-Winstein</a> replied at the <a href="https://www.quora.com/How-can-someone-rapidly-delete-400-000-files">Quora Posts</a> mentioned that my previous benchmark cannot be reproduced due to the time of all deletion operations lasting too long. To make it clear, those weird data might be that my computer was under heavy load in the past years that it may exist some fs errors during the previous benchmarks. Yet, I am not sure about it. Anyway, I got myself a relatively new rackable computer and did the benchmark again. This time I used <code>/usr/bin/time</code> that offers more detail results. Here is the new result,</p>
<p>(The # of files is 1000000. Each of them has 0 size.)</p>
<table>
<thead>
<tr>
<th>Command</th>
<th>Elapsed</th>
<th>System Time</th>
<th>%CPU</th>
<th>cs (Vol/Invol)</th>
</tr>
</thead>
<tbody>
<tr>
<td>rsync -a –delete empty/ a</td>
<td>10.60</td>
<td>1.31</td>
<td>95</td>
<td>106/22</td>
</tr>
<tr>
<td>find b/ -type f -delete</td>
<td>28.51</td>
<td>14.46</td>
<td>52</td>
<td>14849/11</td>
</tr>
<tr>
<td>find c/ -type f | xargs -L 100 rm</td>
<td>41.69</td>
<td>20.60</td>
<td>54</td>
<td>37048/15074</td>
</tr>
<tr>
<td>find d/ -type f | xargs -L 100 -P 100 rm</td>
<td>34.32</td>
<td>27.82</td>
<td>89</td>
<td>929897/21720</td>
</tr>
<tr>
<td>rm -rf f</td>
<td>31.29</td>
<td>14.80</td>
<td>47</td>
<td>15134/11</td>
</tr>
</tbody>
</table>
<h3 id="original-output">Original Output</h3>
<pre><code># method 1
~/test $ /usr/bin/time -v  rsync -a --delete empty/ a/
        Command being timed: &quot;rsync -a --delete empty/ a/&quot;
        User time (seconds): 1.31
        System time (seconds): 10.60
        Percent of CPU this job got: 95%
        Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.42
        Average shared text size (kbytes): 0
        Average unshared data size (kbytes): 0
        Average stack size (kbytes): 0
        Average total size (kbytes): 0
        Maximum resident set size (kbytes): 0
        Average resident set size (kbytes): 0
        Major (requiring I/O) page faults: 0
        Minor (reclaiming a frame) page faults: 24378
        Voluntary context switches: 106
        Involuntary context switches: 22
        Swaps: 0
        File system inputs: 0
        File system outputs: 0
        Socket messages sent: 0
        Socket messages received: 0
        Signals delivered: 0
        Page size (bytes): 4096
        Exit status: 0

# method 2
        Command being timed: &quot;find b/ -type f -delete&quot;
        User time (seconds): 0.41
        System time (seconds): 14.46
        Percent of CPU this job got: 52%
        Elapsed (wall clock) time (h:mm:ss or m:ss): 0:28.51
        Average shared text size (kbytes): 0
        Average unshared data size (kbytes): 0
        Average stack size (kbytes): 0
        Average total size (kbytes): 0
        Maximum resident set size (kbytes): 0
        Average resident set size (kbytes): 0
        Major (requiring I/O) page faults: 0
        Minor (reclaiming a frame) page faults: 11749
        Voluntary context switches: 14849
        Involuntary context switches: 11
        Swaps: 0
        File system inputs: 0
        File system outputs: 0
        Socket messages sent: 0
        Socket messages received: 0
        Signals delivered: 0
        Page size (bytes): 4096
        Exit status: 0
# method 3
find c/ -type f | xargs -L 100 rm
~/test $ /usr/bin/time -v ./delete.sh
        Command being timed: &quot;./delete.sh&quot;
        User time (seconds): 2.06
        System time (seconds): 20.60
        Percent of CPU this job got: 54%
        Elapsed (wall clock) time (h:mm:ss or m:ss): 0:41.69
        Average shared text size (kbytes): 0
        Average unshared data size (kbytes): 0
        Average stack size (kbytes): 0
        Average total size (kbytes): 0
        Maximum resident set size (kbytes): 0
        Average resident set size (kbytes): 0
        Major (requiring I/O) page faults: 0
        Minor (reclaiming a frame) page faults: 1764225
        Voluntary context switches: 37048
        Involuntary context switches: 15074
        Swaps: 0
        File system inputs: 0
        File system outputs: 0
        Socket messages sent: 0
        Socket messages received: 0
        Signals delivered: 0
        Page size (bytes): 4096
        Exit status: 0

# method 4
find d/ -type f | xargs -L 100 -P 100 rm
~/test $ /usr/bin/time -v ./delete.sh
        Command being timed: &quot;./delete.sh&quot;
        User time (seconds): 2.86
        System time (seconds): 27.82
        Percent of CPU this job got: 89%
        Elapsed (wall clock) time (h:mm:ss or m:ss): 0:34.32
        Average shared text size (kbytes): 0
        Average unshared data size (kbytes): 0
        Average stack size (kbytes): 0
        Average total size (kbytes): 0
        Maximum resident set size (kbytes): 0
        Average resident set size (kbytes): 0
        Major (requiring I/O) page faults: 0
        Minor (reclaiming a frame) page faults: 1764278
        Voluntary context switches: 929897
        Involuntary context switches: 21720
        Swaps: 0
        File system inputs: 0
        File system outputs: 0
        Socket messages sent: 0
        Socket messages received: 0
        Signals delivered: 0
        Page size (bytes): 4096
        Exit status: 0

# method 5
~/test $ /usr/bin/time -v rm -rf f
        Command being timed: &quot;rm -rf f&quot;
        User time (seconds): 0.20
        System time (seconds): 14.80
        Percent of CPU this job got: 47%
        Elapsed (wall clock) time (h:mm:ss or m:ss): 0:31.29
        Average shared text size (kbytes): 0
        Average unshared data size (kbytes): 0
        Average stack size (kbytes): 0
        Average total size (kbytes): 0
        Maximum resident set size (kbytes): 0
        Average resident set size (kbytes): 0
        Major (requiring I/O) page faults: 0
        Minor (reclaiming a frame) page faults: 176
        Voluntary context switches: 15134
        Involuntary context switches: 11
        Swaps: 0
        File system inputs: 0
        File system outputs: 0
        Socket messages sent: 0
        Socket messages received: 0
        Signals delivered: 0
        Page size (bytes): 4096
        Exit status: 0
</code></pre><h3 id="hardware-specification">Hardware specification</h3>
<pre><code>Summary:        HP DL360 G7, 2 x Xeon E5620 2.40GHz, 23.5GB / 24GB 1333MHz
Processors:     2 (of 16) x Xeon E5620 2.40GHz (16 cores)
Memory:         23.5GB
Disk:           cciss/c0d0 (cciss0): 300GB (4%) RAID-10
Disk-Control:   cciss0: Hewlett-Packard Company Smart Array G6 controllers, FW 3.66
OS:             RHEL Server 5.4 (Tikanga), Linux 2.6.18-164.el5 x86_64, 64-bit
</code></pre><h2 id="the-original-benchmark">The Original Benchmark</h2>
<p>Yesterday, I saw a very interesting method for deleting huge number of files in a single directory. The method is provided by Zhenyu Lee athttp://www.quora.com/How-can-someone-rapidly-delete-400-000-files
Instead of using find and xargs, Lee ingeniously takes the advantage of rsync that he uses rsync –delete to sync the target directory with an empty directory. Later, I did a comparasion on various method that I've used. To my surprise, Lee's method is much faster than others. The following is my benchmark,</p>
<table>
<thead>
<tr>
<th>Command</th>
<th># of files</th>
<th>Elapsed</th>
</tr>
</thead>
<tbody>
<tr>
<td>rsync -a –delete empty/ s1</td>
<td>1000000</td>
<td>6m50.638s</td>
</tr>
<tr>
<td>find s2/ -type f -delete</td>
<td>1000000</td>
<td>87m38.826s</td>
</tr>
<tr>
<td>find s3/ -type f | xargs -L 100 rm</td>
<td>1000000</td>
<td>83m36.851s</td>
</tr>
<tr>
<td>find s4/ -type f | xargs -L 100 -P 100 rm</td>
<td>1000000</td>
<td>78m4.658s</td>
</tr>
<tr>
<td>rm -rf s5</td>
<td>1000000</td>
<td>80m33.434s</td>
</tr>
</tbody>
</table>
<h3 id="hardware-specification1">Hardware Specification</h3>
<pre><code>CPU: Intel(R) Core(TM)2 Duo CPU E8400 @ 3.00GHz
MEM: 4G
HD: ST3250318AS: 250G/7200RPM
</code></pre><h2 id="footnotes">Footnotes</h2>
<p>[1]: Voluntary Context Switches and Involuntary Context Switches from /usr/bin/time</p>
<p>[2]: As there is pipeline, in order to make an accurate result, practically the command is wrapped by a bash script</p>
<p>Original Post: <a href="http://linuxnote.net/jianingy/en/linux/a-fast-way-to-remove-huge-number-of-files.html">http://linuxnote.net/jianingy/en/linux/a-fast-way-to-remove-huge-number-of-files.html</a></p>
]]></content>
        </item>
        
        <item>
            <title>Sysadmin Devops Toos and Frameworks</title>
            <link>/en/2019/12/sysadmin-devops-toos-and-frameworks/</link>
            <pubDate>Thu, 05 Dec 2019 02:21:55 +0000</pubDate>
            
            <guid>/en/2019/12/sysadmin-devops-toos-and-frameworks/</guid>
            <description>How hard is to you SysAdmin/DevOps to keep track of all the tools, platforms and frameworks available on the market?
3 years ago, Jeferson Norona #LinuxTips (VAI), posted on his personal page about a project responsible to gather all those tools and frameworks and consolidate it, to our life of SysAdmins/DevOps easier.
The project was created by Alen Krmelj and it&#39;s awesome!
http://sysadmin.it-landscape.info/</description>
            <content type="html"><![CDATA[<p>How hard is to you SysAdmin/DevOps to keep track of all the tools, platforms and frameworks available on the market?</p>
<p>3 years ago, <a href="https://twitter.com/badtux_">Jeferson Norona</a> #LinuxTips (VAI), posted on his personal page about a project responsible to gather all those tools and frameworks and consolidate it, to our life of SysAdmins/DevOps easier.</p>
<p>The project was created by <a href="blackbird.si">Alen Krmelj</a> and it's awesome!</p>
<p><img src="/2019/12/itlandscape.png" alt="itlandscape.png"></p>
<p><a href="http://sysadmin.it-landscape.info/"><a href="http://sysadmin.it-landscape.info/">http://sysadmin.it-landscape.info/</a></a></p>
]]></content>
        </item>
        
    </channel>
</rss>
