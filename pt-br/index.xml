<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hugo Prudente</title>
    <link>https://hugoprudente.github.io/pt-br/</link>
    <description>Recent content on Hugo Prudente</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt-br</language>
    <lastBuildDate>Thu, 04 Mar 2021 22:46:31 +0000</lastBuildDate><atom:link href="https://hugoprudente.github.io/pt-br/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Gerenciando Segredos Durante Docker Build</title>
      <link>https://hugoprudente.github.io/pt-br/posts/gerenciando-segredos-durante-docker-build/</link>
      <pubDate>Thu, 04 Mar 2021 22:46:31 +0000</pubDate>
      
      <guid>https://hugoprudente.github.io/pt-br/posts/gerenciando-segredos-durante-docker-build/</guid>
      <description>Qual seria a melhor maneira de gerenciar meus segredos durante uma compilação do docker?
Verificando projetos oficiais e não oficiais disponíveis em [hub.docker.com] (https://hub.docker.com), Reuni os 4 (quatro) casos mais comuns de como os usuários armazenam e gerenciam seus segredos.
Há casos em que durante a construção você usaria um token ou arquivo secreto para buscar informações de um repositório ou outro aplicativo para definir uma configuração que não será possível durante o tempo de execução.</description>
    </item>
    
    <item>
      <title>Usando AWS Network ACLs com NAT Gateway</title>
      <link>https://hugoprudente.github.io/pt-br/posts/usando-aws-network-acls-com-natgateway/</link>
      <pubDate>Sat, 11 Jul 2020 13:09:21 +0200</pubDate>
      
      <guid>https://hugoprudente.github.io/pt-br/posts/usando-aws-network-acls-com-natgateway/</guid>
      <description>É muito comum os erros feitos durante configurações de AWS Network ACLs quando adicionando a camada extra de segurança na VPC.
Dado o fato da Network ACL ser stateless, que significa que a regra de Entrada (Inbound), precisa bater com a de Saída (Oubound).
Com este post, você aprenderá identificar tais particularides usando o ambiente do AWS ElasticBeanstalk como exemplo, devido sua sensibilidade quanto aos requisitos de acesso a rede.</description>
    </item>
    
    <item>
      <title>Kubernetes Nginx Ingress Controller vs Nginx Ingress Controller for Kubernetes</title>
      <link>https://hugoprudente.github.io/pt-br/posts/kubernetes-nginx-ingress-controller-vs-nginx-ingress-controller-for-kubernetes/</link>
      <pubDate>Tue, 21 Jan 2020 21:23:25 +0000</pubDate>
      
      <guid>https://hugoprudente.github.io/pt-br/posts/kubernetes-nginx-ingress-controller-vs-nginx-ingress-controller-for-kubernetes/</guid>
      <description>Vejo sempre pessoas com problemas utilizando o Kubernetes Ingress Controller tipo Nginx.
O principal problema reportado na comunidade é na anotação nginx.ingress.kubernetes.io/rewrite-target: / não funcionando.
A causa da tag não funcionando é do ingres-controller sendo utilizado. Vamos clarificar!
Geralmente vamos ao google.com e procuramos pelas seguintes palavras &amp;ldquo;kuberentes ingress controller&amp;rdquo;, isso retornara 2 projetos Oficiais, por duas companhias diferentes.
NGINX Ingress Controller for Kubernetes by NGINX Kubernetes Nginx Ingress Controller by Kubernetes (Google) Durante o troubleshoot o primeiro passo é definir qual ingress-controller do Nginx está sendo utilizado:</description>
    </item>
    
    <item>
      <title>A maneira mais rápida de deletar um grande número arquivos</title>
      <link>https://hugoprudente.github.io/pt-br/posts/a-maneira-mais-rapida-de-deletar-um-grande-numero-de-arquivos/</link>
      <pubDate>Fri, 10 Jan 2020 10:38:03 +0000</pubDate>
      
      <guid>https://hugoprudente.github.io/pt-br/posts/a-maneira-mais-rapida-de-deletar-um-grande-numero-de-arquivos/</guid>
      <description>Muitos anos atrás, devido a um erro no código da aplicação que trabalhavamos acabamos gerando aproximadamente 10 milhões de arquivos, acabando com os inodes do sistema. Devido aquele servidor não ter alta disponibilidade no momento fui a procura do ganso dos ovos de ouro e achei isso aqui.
Infelizmente o artigo original não está mais disponível, mas desse em dia em diante rsync é minha ferramenta principal de destruição em massa!</description>
    </item>
    
    <item>
      <title>Sysadmin Devops Tools and Frameworks</title>
      <link>https://hugoprudente.github.io/pt-br/posts/sysadmin-devops-tools-and-frameworks/</link>
      <pubDate>Thu, 05 Dec 2019 02:21:55 +0000</pubDate>
      
      <guid>https://hugoprudente.github.io/pt-br/posts/sysadmin-devops-tools-and-frameworks/</guid>
      <description>O quanto dificil como SysAdmin/DevOps é se manter atualizado em todas as ferramentas, plataformas e frameworks disponíveis no mercado?
3 anos atrás, Jeferson Norona #LinuxTips (VAI), postou em suas redes sociais sobre um projeto onde reune e consolida as principais ferramentas e frameworks para facilitar a vida do SysAdmin/DevOps.
O projeto foi criado por Alen Krmelj e é magnífico!
http://sysadmin.it-landscape.info/</description>
    </item>
    
  </channel>
</rss>
