<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on Hugo Prudente</title>
        <link>https://hugoprudente.github.io/pt-br/posts/</link>
        <description>Recent content in Posts on Hugo Prudente</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>pt-br</language>
        <lastBuildDate>Tue, 29 Aug 2023 10:32:57 +0000</lastBuildDate>
        <atom:link href="https://hugoprudente.github.io/pt-br/posts/index.xml" rel="self" type="application/rss+xml" />
        
        <item>
            <title>Online Talks and Lectures Archive</title>
            <link>https://hugoprudente.github.io/pt-br/posts/online-talks-and-lectures-archive/</link>
            <pubDate>Tue, 29 Aug 2023 10:32:57 +0000</pubDate>
            
            <guid>https://hugoprudente.github.io/pt-br/posts/online-talks-and-lectures-archive/</guid>
            <description>Engeneering Sessions (Carlos Nogueira) WarRoom: Hashcorp adota BSL: OpenTF the Fork Participantes:
MC Marcelo Nogueira Fernando Ike Marco Junior (Somatorio) Hugo Prudente Guto Carvalho Video is in Portuguese from Brasil
Pipelines Participantes:
MC Marcelo Nogueira Guto Carvalho Hugo Prudente Video is in Portuguese from Brasil
Will WASM replace K8S? Participantes:
MC Marcelo Nogueira Daniel Romero (infoslack) Joao Brito (GetUp) Hugo Prudente Video is in Portuguese from Brasil
Metrics &amp;amp; Observability Participantes:</description>
            <content type="html"><![CDATA[<h2 id="engeneering-sessions-carlos-nogueira">Engeneering Sessions (Carlos Nogueira)</h2>
<h3 id="warroom-hashcorp-adota-bsl-opentf-the-fork">WarRoom: Hashcorp adota BSL: OpenTF the Fork</h3>
<p>Participantes:</p>
<ul>
<li>MC Marcelo Nogueira</li>
<li>Fernando Ike</li>
<li>Marco Junior (Somatorio)</li>
<li>Hugo Prudente</li>
<li>Guto Carvalho</li>
</ul>
<blockquote>
<p>Video is in Portuguese from Brasil</p>
</blockquote>
<iframe width="560" height="315" src="https://www.youtube.com/embed/BU9RdqENgPo?si=fkA354m31sH2CNfX" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
<h3 id="pipelines">Pipelines</h3>
<p>Participantes:</p>
<ul>
<li>MC Marcelo Nogueira</li>
<li>Guto Carvalho</li>
<li>Hugo Prudente</li>
</ul>
<blockquote>
<p>Video is in Portuguese from Brasil</p>
</blockquote>
<iframe width="560" height="315" src="https://www.youtube.com/embed/wNqeR9O5ay0?si=nTkAgzCksqoFHZ4t" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
<h3 id="will-wasm-replace-k8s">Will WASM replace K8S?</h3>
<p>Participantes:</p>
<ul>
<li>MC Marcelo Nogueira</li>
<li>Daniel Romero (infoslack)</li>
<li>Joao Brito (GetUp)</li>
<li>Hugo Prudente</li>
</ul>
<blockquote>
<p>Video is in Portuguese from Brasil</p>
</blockquote>
<iframe width="560" height="315" src="https://www.youtube.com/embed/iW7eTFSquaY?si=5fBbiIFQ1LYdvHGt" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
<h3 id="metrics--observability">Metrics &amp; Observability</h3>
<p>Participantes:</p>
<ul>
<li>MC Marcelo Nogueira</li>
<li>Daniel Requena</li>
<li>Hugo Prudente</li>
<li>Vitor Lobo</li>
</ul>
<blockquote>
<p>Video is in Portuguese from Brasil</p>
</blockquote>
<iframe width="560" height="315" src="https://www.youtube.com/embed/UwuhEn6XXe0?si=UbQEDCm8GfN_GUvj" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
<h2 id="linuxtips">LinuxTips</h2>
<h3 id="zuul-ci-com-ansible-nativo">Zuul CI com Ansible Nativo</h3>
<blockquote>
<p>Video is in Portuguese from Brasil</p>
</blockquote>
<iframe width="560" height="315" src="https://www.youtube.com/embed/ETZYDvAYLX4?si=cg6xSdr7nR313So-" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
<h2 id="jac-lives">Jac lives</h2>
<h3 id="disaster-recovery">Disaster Recovery</h3>
<p>Talk with Guto Carvalho about Disaster Recovery</p>
<blockquote>
<p>Video is in Portuguese from Brasil</p>
</blockquote>
<iframe width="560" height="315" src="https://www.youtube.com/embed/w-wdO4WlFBU?si=sPvwVfrNerM5RHg4" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
<h2 id="devopsdays">DevOpsDays</h2>
<h3 id="devopsdays-poa-2021---zuul-ci-com-ansible-nativo">DevOpsDays POA 2021 - Zuul CI com Ansible Nativo</h3>
<blockquote>
<p>Video is in Portuguese from Brasil</p>
</blockquote>
<iframe width="560" height="315" src="https://www.youtube.com/embed/d0Akc-Ox4f4?si=jUCkEv4aQcXd5T0z" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>]]></content>
        </item>
        
        <item>
            <title>Gerenciando Segredos Durante Docker Build</title>
            <link>https://hugoprudente.github.io/pt-br/posts/gerenciando-segredos-durante-docker-build/</link>
            <pubDate>Thu, 04 Mar 2021 22:46:31 +0000</pubDate>
            
            <guid>https://hugoprudente.github.io/pt-br/posts/gerenciando-segredos-durante-docker-build/</guid>
            <description>Qual seria a melhor maneira de gerenciar meus segredos durante uma compila√ß√£o do docker?
Verificando projetos oficiais e n√£o oficiais dispon√≠veis em [hub.docker.com] (https://hub.docker.com), Reuni os 4 (quatro) casos mais comuns de como os usu√°rios armazenam e gerenciam seus segredos.
H√° casos em que durante a constru√ß√£o voc√™ usaria um token ou arquivo secreto para buscar informa√ß√µes de um reposit√≥rio ou outro aplicativo para definir uma configura√ß√£o que n√£o ser√° poss√≠vel durante o tempo de execu√ß√£o.</description>
            <content type="html"><![CDATA[<p>Qual seria a melhor maneira de gerenciar meus segredos durante uma compila√ß√£o do docker?</p>
<p>Verificando projetos oficiais e n√£o oficiais dispon√≠veis em [hub.docker.com] (<a href="https://hub.docker.com">https://hub.docker.com</a>),
Reuni os 4 (quatro) casos mais comuns de como os usu√°rios armazenam e gerenciam seus segredos.</p>
<p>H√° casos em que durante a constru√ß√£o voc√™ usaria um token ou arquivo secreto para buscar informa√ß√µes de um
reposit√≥rio ou outro aplicativo para definir uma configura√ß√£o que n√£o ser√° poss√≠vel durante o tempo de execu√ß√£o.</p>
<p>Alguns desses casos tamb√©m n√£o se encaixam na compila√ß√£o multistage como obter um pacote do pip.</p>
<h2 id="cen√°rios">Cen√°rios</h2>
<p>Preciso instalar um <code>python</code> usando um pip privado que criei para este laborat√≥rio.</p>
<p>Para conseguir isso, voc√™ s√≥ precisa adicionar o arquivo <code>pip.conf</code> conforme abaixo em<code> / root / .pip / pip.conf</code>.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-ini" data-lang="ini"><span style="display:flex;"><span><span style="color:#66d9ef">[global]</span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">index-url</span> <span style="color:#f92672">=</span> <span style="color:#e6db74">https: //hugo.prudente: My$3cr3tP4$$@private.pip/playlist</span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">tempo limite</span> <span style="color:#f92672">=</span> <span style="color:#e6db74">60</span>
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">extra-index-url</span> <span style="color:#f92672">=</span> <span style="color:#e6db74">https://pypi.python.org/simple</span>
</span></span></code></pre></div><p>Parece simples, vamos ver como o administramos.</p>
<h3 id="m√©todo-1">M√©todo 1</h3>
<p>Aqui, copiamos o <code>pip.conf</code> para o cont√™iner e n√£o o removemos no final.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-Dockerfile" data-lang="Dockerfile"><span style="display:flex;"><span><span style="color:#66d9ef">FROM</span><span style="color:#e6db74"> python:latest</span><span style="color:#960050;background-color:#1e0010">
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#66d9ef">COPY</span> pip.conf /root/.pip/pip.conf<span style="color:#960050;background-color:#1e0010">
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#66d9ef">RUN</span> pip install playlist<span style="color:#960050;background-color:#1e0010">
</span></span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>on ‚õµ k3s <span style="color:#f92672">(</span>nerdweek<span style="color:#f92672">)</span> ~/post via üêç v3.9.1 <span style="color:#f92672">(</span>osx<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>‚ûú docker build -t secret:v1 .
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>on ‚õµ k3s <span style="color:#f92672">(</span>nerdweek<span style="color:#f92672">)</span> ~/post via üêç v3.9.1 <span style="color:#f92672">(</span>osx<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>‚ûú docker history secret:v1
</span></span><span style="display:flex;"><span>IMAGE          CREATED              CREATED BY                                      SIZE      COMMENT
</span></span><span style="display:flex;"><span>0d6589d4b95f   About a minute ago   RUN /bin/sh -c pip install playlist <span style="color:#75715e"># bui‚Ä¶   14.1MB    buildkit.dockerfile.v0</span>
</span></span><span style="display:flex;"><span>&lt;missing&gt;      <span style="color:#ae81ff">4</span> minutes ago        COPY pip.conf /root/.pip/pip.conf <span style="color:#75715e"># buildkit    200B      buildkit.dockerfile.v0</span>
</span></span><span style="display:flex;"><span>&lt;missing&gt;      <span style="color:#ae81ff">10</span> days ago          /bin/sh -c <span style="color:#75715e">#(nop)  CMD [&#34;python3&#34;]              0B</span>
</span></span></code></pre></div><p>Vamos verificar se o arquivo no final da compila√ß√£o est√° presente e n√£o.</p>
<pre tabindex="0"><code>on ‚õµ k3s (nerdweek) ~/post via üêç v3.9.1 (osx)
‚ùØ docker run -it secret:v1 cat /root/.pip/pip.conf
[global]
index-url = https://hugo.prudente:My$3cr3tP4$$@private.pip/playlist
timeout=60
extra-index-url = https://pypi.python.org/simple
</code></pre><h3 id="m√©todo-2">M√©todo 2</h3>
<p>Aqui, copiamos o <code>pip.conf</code> para o cont√™iner e o removemos com uma instru√ß√£o<code> RUN</code> no final.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-Dockerfile" data-lang="Dockerfile"><span style="display:flex;"><span><span style="color:#66d9ef">FROM</span><span style="color:#e6db74"> python:latest</span><span style="color:#960050;background-color:#1e0010">
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#66d9ef">COPY</span> pip.conf /root/.pip/pip.conf<span style="color:#960050;background-color:#1e0010">
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#66d9ef">RUN</span> pip install playlist<span style="color:#960050;background-color:#1e0010">
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#66d9ef">RUN</span> rm /root/.pip/pip.conf<span style="color:#960050;background-color:#1e0010">
</span></span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>on ‚õµ k3s <span style="color:#f92672">(</span>nerdweek<span style="color:#f92672">)</span> ~/post via üêç v3.9.1 <span style="color:#f92672">(</span>osx<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>‚ûú docker build -t secret:v2 .
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>on ‚õµ k3s <span style="color:#f92672">(</span>nerdweek<span style="color:#f92672">)</span> ~/post via üêç v3.9.1 <span style="color:#f92672">(</span>osx<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>‚ûú docker history secret:v2
</span></span><span style="display:flex;"><span>IMAGE          CREATED         CREATED BY                                      SIZE      COMMENT
</span></span><span style="display:flex;"><span>42f04cdc6577   <span style="color:#ae81ff">6</span> seconds ago   RUN /bin/sh -c rm /root/.pip/pip.conf <span style="color:#75715e"># buil‚Ä¶   0B        buildkit.dockerfile.v0</span>
</span></span><span style="display:flex;"><span>&lt;missing&gt;      <span style="color:#ae81ff">4</span> minutes ago   RUN /bin/sh -c pip install playlist <span style="color:#75715e"># bui‚Ä¶   14.1MB    buildkit.dockerfile.v0</span>
</span></span><span style="display:flex;"><span>&lt;missing&gt;      <span style="color:#ae81ff">7</span> minutes ago   COPY pip.conf /root/.pip/pip.conf <span style="color:#75715e"># buildkit    200B      buildkit.dockerfile.v0</span>
</span></span><span style="display:flex;"><span>&lt;missing&gt;      <span style="color:#ae81ff">10</span> days ago     /bin/sh -c <span style="color:#75715e">#(nop)  CMD [&#34;python3&#34;]              0B</span>
</span></span></code></pre></div><p>Vamos verificar novamente se o arquivo estava presente.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>on ‚õµ k3s <span style="color:#f92672">(</span>nerdweek<span style="color:#f92672">)</span> ~/post via üêç v3.9.1 <span style="color:#f92672">(</span>osx<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>‚ûú docker run -it secret:v2 cat /root/.pip/pip.conf
</span></span><span style="display:flex;"><span>cat: /root/.pip/pip.conf: No such file or directory
</span></span></code></pre></div><h3 id="m√©todo-3">M√©todo 3</h3>
<p>Aqui, copiamos o <code>pip.conf</code> para o cont√™iner e o removemos na mesma instru√ß√£o<code> RUN</code> do <code>pip install</code></p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-Dockerfile" data-lang="Dockerfile"><span style="display:flex;"><span><span style="color:#66d9ef">FROM</span><span style="color:#e6db74"> python:latest</span><span style="color:#960050;background-color:#1e0010">
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#66d9ef">COPY</span> pip.conf /root/.pip/pip.conf<span style="color:#960050;background-color:#1e0010">
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#66d9ef">RUN</span> pip install playlist <span style="color:#f92672">&amp;&amp;</span> rm /root/.pip/pip.conf<span style="color:#960050;background-color:#1e0010">
</span></span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>on ‚õµ k3s <span style="color:#f92672">(</span>nerdweek<span style="color:#f92672">)</span> ~/post via üêç v3.9.1 <span style="color:#f92672">(</span>osx<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>‚ûú docker build -t secret:v3 .
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>on ‚õµ k3s <span style="color:#f92672">(</span>nerdweek<span style="color:#f92672">)</span> ~/post via üêç v3.9.1 <span style="color:#f92672">(</span>osx<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>‚ûú docker history secret:v3
</span></span><span style="display:flex;"><span>IMAGE          CREATED              CREATED BY                                      SIZE      COMMENT
</span></span><span style="display:flex;"><span>a2bf2672abaf   About a minute ago   RUN /bin/sh -c pip install playlist <span style="color:#f92672">&amp;&amp;</span> rm‚Ä¶   14.1MB    buildkit.dockerfile.v0
</span></span><span style="display:flex;"><span>&lt;missing&gt;      <span style="color:#ae81ff">17</span> minutes ago       COPY pip.conf /root/.pip/pip.conf <span style="color:#75715e"># buildkit    200B      buildkit.dockerfile.v0</span>
</span></span><span style="display:flex;"><span>&lt;missing&gt;      <span style="color:#ae81ff">10</span> days ago          /bin/sh -c <span style="color:#75715e">#(nop)  CMD [&#34;python3&#34;]              0B</span>
</span></span></code></pre></div><p>Vamos verificar mais uma vez se o arquivo estava presente.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>on ‚õµ k3s <span style="color:#f92672">(</span>nerdweek<span style="color:#f92672">)</span> ~/post via üêç v3.9.1 <span style="color:#f92672">(</span>osx<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>‚ûú docker run -it secret:v3 cat /root/.pip/pip.conf
</span></span><span style="display:flex;"><span>cat: /root/.pip/pip.conf: No such file or directory
</span></span></code></pre></div><h3 id="m√©todo-4">M√©todo 4</h3>
<p>Aqui criamos o <code>pip.conf</code> usando o script<code> generate.sh</code> que recebe o
<code>SECRET</code> como<code> ARG</code> com as op√ß√µes <code>--build-arg</code> e o removemos na mesma instru√ß√£o<code> RUN</code>.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span><span style="color:#75715e">#!/bin/sh
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>
</span></span><span style="display:flex;"><span>SECRET<span style="color:#f92672">=</span>$1
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>mkdir -p /root/.pip
</span></span><span style="display:flex;"><span>cat &gt; /root/.pip/pip.conf <span style="color:#e6db74">&lt;&lt; EOF
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">[global]
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">index-url = https://hugo.prudente:${SECRET}@private.pip/playlist
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">timeout=60
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">extra-index-url = https://pypi.python.org/simple
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74">EOF</span>
</span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-Dockerfile" data-lang="Dockerfile"><span style="display:flex;"><span><span style="color:#66d9ef">FROM</span><span style="color:#e6db74"> python:latest</span><span style="color:#960050;background-color:#1e0010">
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#66d9ef">ARG</span> SECRET<span style="color:#960050;background-color:#1e0010">
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#66d9ef">COPY</span> generate.sh /generate.sh<span style="color:#960050;background-color:#1e0010">
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#66d9ef">RUN</span> /generate.sh <span style="color:#e6db74">${</span>SECRET<span style="color:#e6db74">}</span> <span style="color:#f92672">&amp;&amp;</span> pip install playlist <span style="color:#f92672">&amp;&amp;</span> rm /root/.pip/pip.conf<span style="color:#960050;background-color:#1e0010">
</span></span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>on ‚õµ k3s <span style="color:#f92672">(</span>nerdweek<span style="color:#f92672">)</span> ~/post via üêç v3.9.1 <span style="color:#f92672">(</span>osx<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>‚ûú on ‚õµ k3s <span style="color:#f92672">(</span>nerdweek<span style="color:#f92672">)</span> ~/post via üêç v3.9.1 <span style="color:#f92672">(</span>osx<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>‚ûú docker build -t secret:v4 --progress plain --build-arg SECRET<span style="color:#f92672">=</span>My$3cr3tP4$$ .
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>‚ûú on ‚õµ k3s <span style="color:#f92672">(</span>nerdweek<span style="color:#f92672">)</span> ~/post via üêç v3.9.1 <span style="color:#f92672">(</span>osx<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>‚ûú docker history -H secret:v4
</span></span><span style="display:flex;"><span>IMAGE          CREATED         CREATED BY                                      SIZE      COMMENT
</span></span><span style="display:flex;"><span>d2ca3623139f   <span style="color:#ae81ff">2</span> minutes ago   RUN |<span style="color:#ae81ff">1</span> SECRET<span style="color:#f92672">=</span>My$3cr3tP4$$ /b‚Ä¶   14.1MB    buildkit.dockerfile.v0
</span></span><span style="display:flex;"><span>&lt;missing&gt;      <span style="color:#ae81ff">2</span> minutes ago   COPY generate.sh /generate.sh <span style="color:#75715e"># buildkit        261B      buildkit.dockerfile.v0</span>
</span></span><span style="display:flex;"><span>&lt;missing&gt;      <span style="color:#ae81ff">2</span> minutes ago   ARG SECRET                                      0B        buildkit.dockerfile.v0
</span></span><span style="display:flex;"><span>&lt;missing&gt;      <span style="color:#ae81ff">10</span> days ago     /bin/sh -c <span style="color:#75715e">#(nop)  CMD [&#34;python3&#34;]              0B</span>
</span></span></code></pre></div><p>Por √∫ltimo, mas n√£o menos importante, vamos verificar a presen√ßa do arquivo.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>no ‚õµ k3s <span style="color:#f92672">(</span>nerdweek<span style="color:#f92672">)</span> ~ / postar via üêç v3.9.1 <span style="color:#f92672">(</span>osx<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>‚ùØ docker run -it secret: v4 cat /root/.pip/pip.conf
</span></span><span style="display:flex;"><span>cat: /root/.pip/pip.conf: Esse arquivo ou diret√≥rio n√£o existe
</span></span></code></pre></div><p>A credencial n√£o est√° no arquivo <code>pip.conf</code>, mas √© vis√≠vel durante o<code> hist√≥rico do docker</code>.</p>
<h3 id="resultados-preliminares">Resultados preliminares</h3>
<p>Aqui est√° uma matriz de onde nossos segredos foram revelados.</p>
<table>
<thead>
<tr>
<th>M√©todo</th>
<th style="text-align:center">Tempo de execu√ß√£o</th>
<th style="text-align:right">Inspe√ß√£o</th>
</tr>
</thead>
<tbody>
<tr>
<td>secret:v1</td>
<td style="text-align:center"><span style="color:red">Yes</span></td>
<td style="text-align:right"><span style="color:green">No</span></td>
</tr>
<tr>
<td>secret:v2</td>
<td style="text-align:center"><span style="color:green">No</span></td>
<td style="text-align:right"><span style="color:green">No</span></td>
</tr>
<tr>
<td>secret:v3</td>
<td style="text-align:center"><span style="color:green">No</span></td>
<td style="text-align:right"><span style="color:green">No</span></td>
</tr>
<tr>
<td>secret:v4</td>
<td style="text-align:center"><span style="color:green">No</span></td>
<td style="text-align:right"><span style="color:red">Yes</span></td>
</tr>
</tbody>
</table>
<p>Com os resultados preliminares, j√° podemos excluir os m√©todos 1 e 4, pois podemos
consider√°-los inseguros devido √†s credenciais serem vis√≠veis em algum ponto.</p>
<p>O m√©todo 4, eu tamb√©m usei <code>--build-args SECRET=${SECRET}</code> e os segredos foram revelados da mesma maneira.</p>
<h2 id="mergulho-profundo">Mergulho profundo</h2>
<h3 id="overlayfs">OverlayFS</h3>
<p>√â a implementa√ß√£o do kernel para um sistema de arquivos de uni√£o, um sistema de arquivos de sobreposi√ß√£o tenta
para apresentar um sistema de arquivos que √© o resultado sobrepondo um sistema de arquivos em
em cima do outro.</p>
<p><img src="/2021/03/overlayfs.png" alt="overlayfs.png"></p>
<p>Resumindo, pegando o exemplo da imagem acima, imagine que voc√™ tem 2 diret√≥rios
o <strong>inferior</strong> e <strong>superior</strong>, onde o ** inferior ** √© um diret√≥rio somente leitura para o
consumidor, mas eles ainda s√£o de leitura e grava√ß√£o do sistema operacional Linux.</p>
<p>Quando um arquivo √© modificado no <strong>superior</strong>, a mudan√ßa acontece normalmente, mas se um
a mudan√ßa √© feita em um arquivo do diret√≥rio <strong>inferior</strong>, uma c√≥pia dele √© criada no
<strong>superior</strong> para se tornar acess√≠vel, uma vez que a modifica√ß√£o seja conclu√≠da em outro
processo √© respons√°vel por buscar a modifica√ß√£o e escrever no ** inferior **
diret√≥rio.</p>
<p>Portanto, esta uni√£o de diret√≥rios fundidos em um √∫nico bloco limitado pelo
cgroups √© o que o docker e seu driver de armazenamento usa em nosso exemplo.</p>
<p>O AUFS que tamb√©m √© um sistema de arquivos de uni√£o tamb√©m apresenta o mesmo comportamento,
embora alguns dos locais possam ser ligeiramente diferentes.</p>
<h3 id="verificando-o-sistema-de-arquivos">Verificando o sistema de arquivos</h3>
<p>Agora que sei como o OverlayFS funciona, vamos isolar os diret√≥rios (camadas) usados
pelo <code>python: latest</code> para que possamos filtrar apenas aqueles que estamos interessados
on, aqueles que possuem o arquivo <code>pip.conf</code>.</p>
<p>Inspecione os cont√™ineres, posso encontrar os diret√≥rios usados ‚Äã‚Äãno OverlayFS.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>on ‚õµ k3s <span style="color:#f92672">(</span>nerdweek<span style="color:#f92672">)</span> ~/post via üêç v3.9.1 <span style="color:#f92672">(</span>osx<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>‚ûú docker inspect python:latest | grep Dir | grep -Eo <span style="color:#e6db74">&#34;([a-z0-9]{25,64})&#34;</span>
</span></span><span style="display:flex;"><span>9e7c768dda91c4fa7ed6a57c7cb784834033bff92bd11ff6d062d4de11c0f898
</span></span><span style="display:flex;"><span>17bf53c98685ae36487eb55f0d2256d168f210a688ef51deef760de1a699cbdf
</span></span><span style="display:flex;"><span>4cb1dbbf58a2b1ca8df6d9d977a66fe918aee21434fcd656f1a68f1f412d75ff
</span></span><span style="display:flex;"><span>358dd0944f115e2a273c5259dd1432b44e36908cf223f8ce0d9f74550430f577
</span></span><span style="display:flex;"><span>c034592b1a26552525742ed81e7fbce2139817b634d48db8349dbebf15a45914
</span></span><span style="display:flex;"><span>19d471e0407c0f1ca14eb1cb8c46aaef9357037cad5dc170cb6a4af3c1feab40
</span></span><span style="display:flex;"><span>e005796f193e62e9db78de1df20999daca1a96a0bebed19c1dd906b1b4da8542
</span></span><span style="display:flex;"><span>badc6aa65b2d3f10b0cdff3fc04bf3a64b551af1dd9e01b6ecd38ed71abdc3da
</span></span><span style="display:flex;"><span>8d6ff96b718838005288a94cdc9fd408d1f70d7e9cbab678ebeb4521d11b366d
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>on ‚õµ k3s <span style="color:#f92672">(</span>nerdweek<span style="color:#f92672">)</span> ~/post via üêç v3.9.1 <span style="color:#f92672">(</span>osx<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>‚ûú docker inspect python:latest | grep Dir | grep -Eo <span style="color:#e6db74">&#34;([a-z0-9]{25,64})&#34;</span> &gt; layers.python
</span></span></code></pre></div><p>Com as camadas salvas no arquivo <code>layers.python</code>, posso usar um comando semelhante para
exclua as camadas conhecidas do python e obtenha apenas aquelas adicionadas por nossa constru√ß√£o.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>on ‚õµ k3s <span style="color:#f92672">(</span>nerdweek<span style="color:#f92672">)</span> ~/post via üêç v3.9.1 <span style="color:#f92672">(</span>osx<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>‚ûú docker inspect secret:v1 | grep Dir | grep -Eo <span style="color:#e6db74">&#34;([a-z0-9]{25,64})&#34;</span> | grep -v -f layers.python  | uniq
</span></span><span style="display:flex;"><span>e1kq2j71b7clcwtn0lbmqa1g9
</span></span><span style="display:flex;"><span>v6zy2xgzrow2mgpyq9d0vch6l
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>‚ûú docker inspect secret:v2 | grep Dir | grep -Eo <span style="color:#e6db74">&#34;([a-z0-9]{25,64})&#34;</span> | grep -v -f layers.python  | uniq
</span></span><span style="display:flex;"><span>v6zy2xgzrow2mgpyq9d0vch6l
</span></span><span style="display:flex;"><span>e1kq2j71b7clcwtn0lbmqa1g9
</span></span><span style="display:flex;"><span>oudofb9c0iaqog9sff81f8053
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>on ‚õµ k3s <span style="color:#f92672">(</span>nerdweek<span style="color:#f92672">)</span> ~/post via üêç v3.9.1 <span style="color:#f92672">(</span>osx<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>‚ûú docker inspect secret:v3 | grep Dir | grep -Eo <span style="color:#e6db74">&#34;([a-z0-9]{25,64})&#34;</span> | grep -v -f layers.python  | uniq
</span></span><span style="display:flex;"><span>e1kq2j71b7clcwtn0lbmqa1g9
</span></span><span style="display:flex;"><span>hqsrze873a2uz7tjsgbqdo3sd
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>on ‚õµ k3s <span style="color:#f92672">(</span>nerdweek<span style="color:#f92672">)</span> ~/post via üêç v3.9.1 <span style="color:#f92672">(</span>osx<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>‚ûú docker inspect secret:v4 | grep Dir | grep -Eo <span style="color:#e6db74">&#34;([a-z0-9]{25,64})&#34;</span> | grep -v -f layers.python  | uniq
</span></span><span style="display:flex;"><span>78gz619okusgrq4jo4ek863ug
</span></span><span style="display:flex;"><span>oq22x88p26hzqmr1w1qpf8mm4
</span></span></code></pre></div><p>Agora que temos as camadas, criei uma lista apenas para torn√°-la mais simples
encontr√°-lo quando verificarmos o diret√≥rio.</p>
<h4 id="acessando-os-diret√≥rios-overlayfs">Acessando os diret√≥rios OverlayFS</h4>
<p>Usando um dos comandos abaixo como root, voc√™ encontrar√° o ponto de entrada onde
O driver Docker Storage cria a hierarquia do sistema de arquivos usada por todo
eco-sistema.</p>
<p><strong>Linux</strong></p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>cd /var/lib/docker/
</span></span></code></pre></div><p><strong>MacOS</strong></p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>docker run -it --rm --privileged --pid<span style="color:#f92672">=</span>host justincormack/nsenter1
</span></span><span style="display:flex;"><span>cd /var/lib/docker/
</span></span></code></pre></div><p>Uma vez no diret√≥rio <code>/var/lib/docker</code> usando um simples<code> ls</code> e filtrando o
camadas anteriores armazenadas no arquivo tempor√°rio e expandindo-o eu poderia encontrar o
camadas espec√≠ficas que t√™m o <code>pip.conf</code></p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>/var/lib/docker/overlay2 
</span></span><span style="display:flex;"><span><span style="color:#75715e"># ls | grep -f /tmp/layers | xargs find | grep pip.conf</span>
</span></span><span style="display:flex;"><span>e1kq2j71b7clcwtn0lbmqa1g9/diff/root/.pip/pip.conf
</span></span><span style="display:flex;"><span>hqsrze873a2uz7tjsgbqdo3sd/diff/root/.pip/pip.conf
</span></span><span style="display:flex;"><span>oudofb9c0iaqog9sff81f8053/diff/root/.pip/pip.conf
</span></span></code></pre></div><p>Ent√£o, acessei cada um deles para confirmar se o arquivo estava presente ou apenas
sua sombra deixada pela uni√£o do diret√≥rio.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>/var/lib/docker/overlay2 
</span></span><span style="display:flex;"><span><span style="color:#75715e"># cat e1kq2j71b7clcwtn0lbmqa1g9/diff/root/.pip/pip.conf</span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">[</span>global<span style="color:#f92672">]</span>
</span></span><span style="display:flex;"><span>index-url <span style="color:#f92672">=</span> https://hugo.prudente:My$3cr3tP4$$@private.pip/playlist
</span></span><span style="display:flex;"><span>timeout<span style="color:#f92672">=</span><span style="color:#ae81ff">60</span>
</span></span><span style="display:flex;"><span>extra-index-url <span style="color:#f92672">=</span> https://pypi.python.org/simpl
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>/var/lib/docker/overlay2 
</span></span><span style="display:flex;"><span><span style="color:#75715e"># cat hqsrze873a2uz7tjsgbqdo3sd/diff/root/.pip/pip.conf</span>
</span></span><span style="display:flex;"><span>cat: can<span style="color:#ae81ff">\&#39;</span>t open <span style="color:#e6db74">&#39;hqsrze873a2uz7tjsgbqdo3sd/diff/root/.pip/pip.conf&#39;</span>: No such device or address
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>/var/lib/docker/overlay2 
</span></span><span style="display:flex;"><span><span style="color:#75715e"># cat oudofb9c0iaqog9sff81f8053/diff/root/.pip/pip.conf</span>
</span></span><span style="display:flex;"><span>cat: can<span style="color:#ae81ff">\&#39;</span>t open <span style="color:#e6db74">&#39;oudofb9c0iaqog9sff81f8053/diff/root/.pip/pip.conf&#39;</span>: No such device or address
</span></span></code></pre></div><p>Portanto, 1 de 3 camadas tem o arquivo presente, ent√£o verifiquei de qual cont√™iner
essa camada pertence e aqui est√° a surpresa.</p>
<p>Essa 1 camada √© compartilhada com 3 de 4 constru√ß√µes que criamos, o que significa que
durante um <code>docker pull</code>, tr√™s recipientes diferentes podem vazar meu<code> pip.conf</code>
segredo.</p>
<h2 id="resultados">Resultados</h2>
<p>A matriz atualizada consolidando os resultados sobre onde nossos segredos vazaram.</p>
<table>
<thead>
<tr>
<th>M√©todo</th>
<th style="text-align:center">Tempo de execu√ß√£o</th>
<th style="text-align:right">Inspe√ß√£o</th>
<th style="text-align:right">OverlayFS</th>
</tr>
</thead>
<tbody>
<tr>
<td>secret:v1</td>
<td style="text-align:center">Yes</td>
<td style="text-align:right">No</td>
<td style="text-align:right">Yes</td>
</tr>
<tr>
<td>secret:v2</td>
<td style="text-align:center">No</td>
<td style="text-align:right">No</td>
<td style="text-align:right">Yes</td>
</tr>
<tr>
<td>secret:v3</td>
<td style="text-align:center">No</td>
<td style="text-align:right">No</td>
<td style="text-align:right">Yes</td>
</tr>
<tr>
<td>secret:v4</td>
<td style="text-align:center">NO</td>
<td style="text-align:right">Yes</td>
<td style="text-align:right">No</td>
</tr>
</tbody>
</table>
<p>Portanto, mesmo sabendo que o arquivo n√£o pode ser acessado diretamente do cont√™iner se
voc√™ tem acesso para puxar o cont√™iner em um sistema completo de leitura e grava√ß√£o, voc√™ seria
capaz de recuperar os segredos.</p>
<p>Mas agora qual √© a melhor maneira de construir o container e n√£o ter esse problema?</p>
<h2 id="solu√ß√£o">Solu√ß√£o</h2>
<p>A partir de 18.09 ou mais recente, o Docker introduziu o Docker BuildKit que traz alguns
funcionalidade extra para as compila√ß√µes do Docker.</p>
<p>As compila√ß√µes usando BuildKit diferentes do legado permitem o uso do
<code>--secret</code> que permite a capacidade de vincular um arquivo durante o tempo de execu√ß√£o de compila√ß√£o
semelhante ao tempo de execu√ß√£o tradicional que alcan√ßamos com a op√ß√£o <code>-v</code>.</p>
<p>Seu uso √© bastante simples, vamos construir um cont√™iner e executar nossos testes novamente.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-Dockerfile" data-lang="Dockerfile"><span style="display:flex;"><span><span style="color:#66d9ef">FROM</span><span style="color:#e6db74"> python:latest</span><span style="color:#960050;background-color:#1e0010">
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010">
</span></span></span><span style="display:flex;"><span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#66d9ef">RUN</span> --mount<span style="color:#f92672">=</span>type<span style="color:#f92672">=</span>secret,id<span style="color:#f92672">=</span>pip.conf,dst<span style="color:#f92672">=</span>/root/.pip/pip.conf <span style="color:#ae81ff">\
</span></span></span><span style="display:flex;"><span><span style="color:#ae81ff"></span>      pip install playlist<span style="color:#960050;background-color:#1e0010">
</span></span></span></code></pre></div><div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>on ‚õµ k3s <span style="color:#f92672">(</span>nerdweek<span style="color:#f92672">)</span> ~/post via üêç v3.9.1 <span style="color:#f92672">(</span>osx<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>‚ûú docker build --file Dockerfile  --secret id<span style="color:#f92672">=</span>pip.conf,src<span style="color:#f92672">=</span>pip.conf -t secret:v5 .
</span></span></code></pre></div><p>Agora que temos a compila√ß√£o <code>secret:v5</code>, vamos confirmar.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>on ‚õµ k3s <span style="color:#f92672">(</span>nerdweek<span style="color:#f92672">)</span> ~/post via üêç v3.9.1 <span style="color:#f92672">(</span>osx<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>‚ûú docker history secret:v5
</span></span><span style="display:flex;"><span>IMAGE          CREATED          CREATED BY                                      SIZE      COMMENT
</span></span><span style="display:flex;"><span>266a21bb36ae   <span style="color:#ae81ff">36</span> seconds ago   RUN /bin/sh -c pip install playlist <span style="color:#75715e"># bui‚Ä¶   14.1MB    buildkit.dockerfile.v0</span>
</span></span><span style="display:flex;"><span>&lt;missing&gt;      <span style="color:#ae81ff">11</span> days ago      /bin/sh -c <span style="color:#75715e">#(nop)  CMD [&#34;python3&#34;]              0Bi</span>
</span></span></code></pre></div><p>O hist√≥rico neste caso √© limpo, sem nem mencionar a montagem para <code>pip.conf</code></p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>on ‚õµ k3s <span style="color:#f92672">(</span>nerdweek<span style="color:#f92672">)</span> ~/post via üêç v3.9.1 <span style="color:#f92672">(</span>osx<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>‚ùØ docker run -it secret:v5 cat /root/.pip/pip.conf
</span></span><span style="display:flex;"><span>cat: /root/.pip/pip.conf: No such file or directory
</span></span></code></pre></div><p>O arquivo tamb√©m n√£o est√° presente no sistema.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>on ‚õµ k3s <span style="color:#f92672">(</span>nerdweek<span style="color:#f92672">)</span> ~/post via üêç v3.9.1 <span style="color:#f92672">(</span>osx<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>‚ùØ docker inspect secret:v5 | grep Dir | grep -Eo <span style="color:#e6db74">&#34;([a-z0-9]{25,64})&#34;</span> | grep -v -f layers.python  | uniq
</span></span><span style="display:flex;"><span>cnpw0dw9o05lmdz3j9j62jzpt
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>on ‚õµ k3s <span style="color:#f92672">(</span>nerdweek<span style="color:#f92672">)</span> ~/post via üêç v3.9.1 <span style="color:#f92672">(</span>osx<span style="color:#f92672">)</span>
</span></span><span style="display:flex;"><span>/var/lib/docker/overlay2 <span style="color:#75715e"># </span>
</span></span><span style="display:flex;"><span>ls cnpw0dw9o05lmdz3j9j62jzpt | xargs find | grep pip.conf
</span></span><span style="display:flex;"><span>find: committed: No such file or directory
</span></span><span style="display:flex;"><span>find: diff: No such file or directory
</span></span><span style="display:flex;"><span>find: link: No such file or directory
</span></span><span style="display:flex;"><span>find: lower: No such file or directory
</span></span><span style="display:flex;"><span>find: work: No such file or directory
</span></span></code></pre></div><p>E o mais importante, o arquivo n√£o existe na camada / diret√≥rio que acabamos de
criado, o que significa que se usarmos em uma imagem de base, nossos scretes est√£o seguros.</p>
<h2 id="refer√™ncias">Refer√™ncias</h2>
<ul>
<li><a href="https://docs.docker.com/develop/develop-images/build_enhancements/">https://docs.docker.com/develop/develop-images/build_enhancements/</a></li>
<li><a href="https://www.kernel.org/doc/html/latest/filesystems/overlayfs.html">https://www.kernel.org/doc/html/latest/filesystems/overlayfs.html</a></li>
<li><a href="https://docs.docker.com/storage/storagedriver/overlayfs-driver/">https://docs.docker.com/storage/storagedriver/overlayfs-driver/</a></li>
</ul>
]]></content>
        </item>
        
        <item>
            <title>Usando AWS Network ACLs com NAT Gateway</title>
            <link>https://hugoprudente.github.io/pt-br/posts/usando-aws-network-acls-com-natgateway/</link>
            <pubDate>Sat, 11 Jul 2020 13:09:21 +0200</pubDate>
            
            <guid>https://hugoprudente.github.io/pt-br/posts/usando-aws-network-acls-com-natgateway/</guid>
            <description>√â muito comum os erros feitos durante configura√ß√µes de AWS Network ACLs quando adicionando a camada extra de seguran√ßa na VPC.
Dado o fato da Network ACL ser stateless, que significa que a regra de Entrada (Inbound), precisa bater com a de Sa√≠da (Oubound).
Com este post, voc√™ aprender√° identificar tais particularides usando o ambiente do AWS ElasticBeanstalk como exemplo, devido sua sensibilidade quanto aos requisitos de acesso a rede.</description>
            <content type="html"><![CDATA[<p>√â muito comum os erros feitos durante configura√ß√µes de AWS Network ACLs quando adicionando a camada extra de seguran√ßa na VPC.</p>
<p>Dado o fato da Network ACL ser <strong>stateless</strong>, que significa que a regra de Entrada (Inbound), precisa bater com a de Sa√≠da (Oubound).</p>
<p>Com este post, voc√™ aprender√° identificar tais particularides usando o ambiente do AWS ElasticBeanstalk como exemplo, devido sua sensibilidade quanto aos requisitos de acesso a rede.</p>
<h2 id="problemas-comuns">Problemas Comuns</h2>
<ul>
<li>Falha do acesso a qualquer endere√ßo HTTPS/TLS  resultando em timeout.</li>
<li>Falha para sincronizar servidores NTP</li>
</ul>
<h2 id="diferen√ßa-entre-security-groups-e-network-acl-nacl">Diferen√ßa entre Security Groups e Network ACL (NACL)</h2>
<p>A diferen√ßa principal entre o Security Group e a Network ACL (NACL) √© o contexto que eles s√£o aplicados e os tipo de regras.</p>
<ul>
<li>
<p>Security Group:
Stateful: N√£o necessita regra que permita a resposta para uma requisi√ß√£o de entrada.
Local: √â aplicado somente na inst√¢ncia ou servi√ßo que o Security Group √© anexado diretamente.</p>
</li>
<li>
<p>Network ACL:
Stateless: Necessita de regra que permita a resposta para uma requisi√ß√£o de entrada.
Global: √â aplicado a todos os servi√ßos que utilizam a subnet que a NACL √© anexado diretamente.</p>
</li>
</ul>
<p><img src="/2020/11/nacl-example-diagram.png" alt="itlandscape.png"></p>
<h2 id="cen√°rio-1---web-tier-subnet-publica-com-network-acl-sem-aws-nat-gateway">Cen√°rio 1 - (Web Tier) Subnet publica com Network ACL sem AWS NAT Gateway.</h2>
<p>Usando o diagrama abaixo como exemplo para a configura√ß√£p da Network ACL para nosso ambiente AWS ElasticBeanstalk.</p>
<p>Diagrama:</p>
<pre tabindex="0"><code>+------------------+
|                  |
|   +----------+   |
|   | INSTANCE |   |
|   +----------+   |
|   |  SG-001  |   |
|   +----------+   |
+------------------+
|    Subnet Pub    |
+------------------+
         +   +--------------+
         |---| ACL-001      |
         v   +--------------+
+------------------+
|       IGW        |
+------------------+
</code></pre><p>Como apresentado nos erros comuns, o fluxo simplificado UDP e HTTPS da analise de pacotes do TCPDUmp mostra 2 (dois) retornos de uma EC2 que pertence ao nosso ambiente.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>UDP 172.31.0.31:123 &gt; 0.amazon.pool.ntp.org
</span></span><span style="display:flex;"><span>UDP 0.amazon.pool.ntp.org &gt; 172.31.0.31:2000
</span></span><span style="display:flex;"><span> 
</span></span><span style="display:flex;"><span>TCP 172.31.0.31:443 &gt; aws.amazon.com
</span></span><span style="display:flex;"><span>TCP aws.amazon.com &gt; 172.31.0.31:3000
</span></span></code></pre></div><p>Na analise do pacote analisamos que a porta de retorno √© efemera, e como sabemos que as Network ACL s√£o stateless n√≥s precisamos levar isso em considera√ß√£o na cria√ß√£o de nossas regras.</p>
<h3 id="solu√ß√£o">Solu√ß√£o</h3>
<p>A solu√ß√£o, neste caso, √© a mistura de regras de Security Group (SG-001) e Network ACLs (ACL-001):</p>
<p><em><strong>Security Group</strong></em> apresenta regras de entrada para TCP/HTTP, TCP/HTTPS nas portas 80 e 443 de todo lugar e regra de saida para todo protocolo todo destino partindo da inst√¢ncia.</p>
<h4 id="security-group-inbound-rule-sg-001">Security Group Inbound Rule (SG-001)</h4>
<pre tabindex="0"><code>Type  |Protocol |Port Range |Source
--------|-----------|-----------|------
HTTP  |TCP  |80 |0.0.0.0/0
HTTPS |TCP  |443  |0.0.0.0/0
</code></pre><h4 id="security-group-outbound-rule-sg-001">Security Group Outbound Rule (SG-001)</h4>
<pre tabindex="0"><code>Type  |Protocol |Port Range |Source
--------|-----------|-----------|------
All |Traffic  |ALL  |ALL  |0.0.0.0/0
</code></pre><h4 id="network-acl-inbound-acl-001">Network ACL Inbound (ACL-001)</h4>
<pre tabindex="0"><code>Rule #  Type  Protocol  Port Range  Destination Allow / Deny
102 HTTP (80) TCP (6) 80  0.0.0.0/0 ALLOW
103 HTTPS (443) TCP (6) 443 0.0.0.0/0 ALLOW
201 Custom TCP Rule TCP (6) 1024-65535  0.0.0.0/0 ALLOW
202 Custom UDP Rule UDP (17)  123 0.0.0.0/0 ALLOW
* ALL Traffic ALL ALL 0.0.0.0/0 DENY
</code></pre><h4 id="network-acl-outbond-acl-001">Network ACL Outbond (ACL-001)</h4>
<pre tabindex="0"><code>Rule #  Type  Protocol  Port Range  Destination Allow / Deny
101 HTTP (80) TCP (6) 80  0.0.0.0/0 ALLOW
202 HTTPS (443) TCP (6) 443 0.0.0.0/0 ALLOW
102 Custom TCP Rule TCP (6) 1024-65535  0.0.0.0/0 ALLOW
103 Custom UDP Rule)  UDP (17)  1024-65535  0.0.0.0/0 ALLOW
* ALL Traffic ALL ALL 0.0.0.0/0 DENY
</code></pre><p>N√≥s sabemos que o ElasticBeanstalk faz muito mais que servir tr√°fego, os agentes que conectam com as APIs AWS precisam de libera√ß√£o tamb√©m, com isso notamos um padr√£o extra nas Network ACLs.</p>
<ul>
<li>Regras 102 e 103 permitem entrada nas portas 80 e 443 seguidos de regras de saida tamb√©m nomeadas 103 e 104 por√©m agora com portas ef√™meras, j√° que sabemos que a porta muda na resposta.</li>
<li>Regras 202 e 203 s√£o usadas na ordem reversa apra permitir saida da EC2 para APIs AWS, onde trataremos o Outbound como Entrada e o Inbound como Sa√≠da pois a ACL est√° nos trancando dentro dela.</li>
</ul>
<h2 id="cen√°rio-2---worker-tier-subnet-privada-com-network-acl-e-aws-nat-gateway">Cen√°rio 2 - (Worker Tier) Subnet Privada com Network ACL e AWS NAT Gateway.</h2>
<p>Again using the diagram below as an example to configure the Network ACL&rsquo;s for an ElasticBeanstalk environment.</p>
<p>Diagram:</p>
<pre tabindex="0"><code>+------------------+
|                  |
|   +----------+   |
|   | INSTANCE |   |
|   +----------+   |
|   |  SG-002  |   |
|   +----------+   |
+------------------+
|  Subnet Private  |
+------------------+
          +
          |   +--------------+
          |---| ACL-002      |
          v   +--------------+
+------------------+
|                  |
|   +----------+   |
|   |  NAT GW  |   |
|   |  SG-002  |   |
|   +----------+   |
+------------------+
|    Subnet Pub    |
+------------------+
         +   +--------------+
         |---| ACL-003      |
         v   +--------------+
+------------------+
|       IGW        |
+------------------+
</code></pre><p>Como antes apresentado nos problemas comuns, o trafego UDP e HTTPS do TCPDump √© analisado e agora ele mostra as mesmas 2 (duas) a√ß√µes da EC2 que pertencem ao ambiente AWS ElasticBeanstalk.</p>
<pre tabindex="0"><code>UDP 172.31.0.31:123 &gt; 172.31.0.34:2000
UDP 172.31.0.34:2000 &gt; 0.amazon.pool.ntp.org
UDP 0.amazon.pool.ntp.org &gt; 172.31.0.34:2000
UDP 172.31.0.34:2000 &gt; 172.31.0.31:3000
 
TCP 172.31.0.31:443 &gt; 172.31.0.33:2000
TCP 172.31.0.33:2000 &gt; aws.amazon.com
TCP aws.amazon.com &gt; 172.31.0.33:3000
TCP 172.31.0.33:3000 &gt; 172.31.0.31:3000
</code></pre><p>Como antes apresentado nos problemas comuns, o trafego UDP e HTTPS do TCPDump √© analisado e agora ele mostra 4 (quatro) pares com um n√≥ extra retornando da mesma a√ß√£o, com diferente portas.</p>
<p>Isso acontece por um comportamento particular do AWS NAT Gateway que encapsula os pacotes novamente para atingir uma performance superior, causando a mudan√ßa extra de porta no cabe√ßalho do pacote durante seu ciclo de vida.</p>
<p>It happens due to a particular behavior of the AWS NAT Gateway. AWS Nat Gateway encapsulates packets to achieve higher performance, causing the change on the packet header for the port of destination during its life cycle.</p>
<h3 id="solu√ß√£o-1">Solu√ß√£o</h3>
<p>A solu√ß√£o, neste caso, in this case, √© a mistura de regras de Security Group (SG-002) e Network ACLs (ACL-002) agora incluindo tamb√©m a ACL-003 dedicada para o NAT Gateway.</p>
<h4 id="security-group-inbound-rule-sg-002">Security Group Inbound Rule (SG-002)</h4>
<pre tabindex="0"><code>Type  Protocol  Port Range  Source
HTTP  TCP 80  0.0.0.0/0
Custom UDP  UDP 123 0.0.0.0/0
Custom UDP  UDP 1024-65535  0.0.0.0/0
Security Group Outbond Rule (SG-002)
Type  Protocol  Port Range  Source
All Traffic ALL ALL 0.0.0.0/0
</code></pre><h4 id="network-acl-inbound---private-subnet-acl-002">Network ACL Inbound - Private Subnet (ACL-002)</h4>
<pre tabindex="0"><code>Rule #  Type  Protocol  Port Range  Destination Allow / Deny
102 HTTP (80) TCP (6) 80  0.0.0.0/0 ALLOW
103 HTTPS (443) TCP (6) 443 0.0.0.0/0 ALLOW
202 Custom TCP Rule TCP (6) 1024-65535  0.0.0.0/0 ALLOW
203 Custom UDP Rule UDP (17)  123 0.0.0.0/0 ALLOW
* ALL Traffic ALL ALL 0.0.0.0/0 DENY
</code></pre><h4 id="network-acl-outbond---private-subnet-acl-002">Network ACL Outbond - Private Subnet (ACL-002)</h4>
<pre tabindex="0"><code>Rule #  Type  Protocol  Port Range  Destination Allow / Deny
202 HTTP (80) TCP (6) 80  0.0.0.0/0 ALLOW
203 HTTPS (443) TCP (6) 443 0.0.0.0/0 ALLOW
102 Custom TCP Rule TCP (6) 1024-65535  0.0.0.0/0 ALLOW
103 Custom UDP Rule)  UDP (17)  1024-65535  0.0.0.0/0 ALLOW
* ALL Traffic ALL ALL 0.0.0.0/0 DENY
</code></pre><h4 id="network-acl-inbound---public-subnet-acl-003">Network ACL Inbound - Public Subnet (ACL-003)</h4>
<pre tabindex="0"><code>Rule #  Type  Protocol  Port Range  Destination Allow / Deny
102 HTTP (80) TCP (6) 80  0.0.0.0/0 ALLOW
103 HTTPS (443) TCP (6) 443 0.0.0.0/0 ALLOW
202 Custom TCP Rule TCP (6) 1024-65535  0.0.0.0/0 ALLOW
203 Custom UDP Rule UDP (17)  123 0.0.0.0/0 ALLOW
* ALL Traffic ALL ALL 0.0.0.0/0 DENY
</code></pre><h4 id="network-acl-outbond---public-subnet-acl-003">Network ACL Outbond - Public Subnet (ACL-003)</h4>
<pre tabindex="0"><code>Rule #  Type  Protocol  Port Range  Destination Allow / Deny
202 HTTP (80) TCP (6) 80  0.0.0.0/0 ALLOW
203 HTTPS (443) TCP (6) 443 0.0.0.0/0 ALLOW
102 Custom TCP Rule TCP (6) 1024-65535  0.0.0.0/0 ALLOW
103 Custom UDP Rule)  UDP (17)  1024-65535  0.0.0.0/0 ALLOW
* ALL Traffic ALL ALL 0.0.0.0/0 DENY
</code></pre><p>Novamente podemos ver o par de regras Network ACL, por√©m temos um par extra para o NAT Gateway.</p>
<ul>
<li>Regras 102 e 103 permitem entrada nas portas 80 e 443 seguidos de regras de saida tamb√©m nomeadas 103 e 104 por√©m agora com portas ef√™meras, j√° que sabemos que a porta muda na resposta.</li>
<li>Regras 202 e 203 s√£o usadas na ordem reversa apra permitir saida da EC2 para APIs AWS, onde trataremos o Outbound como Entrada e o Inbound como Sa√≠da pois a ACL est√° nos trancando dentro dela.</li>
<li>Esperar√≠amos somente trafego de saida para NAT Gateway, mas devido a encapsula√ß√£o, NAT Gateway abre uma nova conex√£o TCP com o backend causando as portas mudarem novamente.</li>
</ul>
<p>Esses problemas s√≥ acontecem com NAT Gateway se voc√™ aumentar a seguran√ßa na Network ACL, a NACL padr√£o da AWS permite trafego de entrada e saida para todo lugar por padr√£o.</p>
<p>Refer√™ncias:</p>
<ul>
<li><a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/VPC_ACLs.html">AWS User Guide for VPC ACLs</a></li>
<li><a href="http://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/vpc-nat-gateway.html">AWS User Guide for VPC NAT Gateway</a></li>
</ul>
]]></content>
        </item>
        
        <item>
            <title>Kubernetes Nginx Ingress Controller vs Nginx Ingress Controller for Kubernetes</title>
            <link>https://hugoprudente.github.io/pt-br/posts/kubernetes-nginx-ingress-controller-vs-nginx-ingress-controller-for-kubernetes/</link>
            <pubDate>Tue, 21 Jan 2020 21:23:25 +0000</pubDate>
            
            <guid>https://hugoprudente.github.io/pt-br/posts/kubernetes-nginx-ingress-controller-vs-nginx-ingress-controller-for-kubernetes/</guid>
            <description>Vejo sempre pessoas com problemas utilizando o Kubernetes Ingress Controller tipo Nginx.
O principal problema reportado na comunidade √© na anota√ß√£o nginx.ingress.kubernetes.io/rewrite-target: / n√£o funcionando.
A causa da tag n√£o funcionando √© do ingres-controller sendo utilizado. Vamos clarificar!
Geralmente vamos ao google.com e procuramos pelas seguintes palavras &amp;ldquo;kuberentes ingress controller&amp;rdquo;, isso retornara 2 projetos Oficiais, por duas companhias diferentes.
NGINX Ingress Controller for Kubernetes by NGINX Kubernetes Nginx Ingress Controller by Kubernetes (Google) Durante o troubleshoot o primeiro passo √© definir qual ingress-controller do Nginx est√° sendo utilizado:</description>
            <content type="html"><![CDATA[<p>Vejo sempre pessoas com problemas utilizando o <strong>Kubernetes Ingress Controller</strong> tipo <strong>Nginx</strong>.</p>
<p>O principal problema reportado na comunidade √© na anota√ß√£o <code>nginx.ingress.kubernetes.io/rewrite-target: /</code> n√£o funcionando.</p>
<p>A causa da <em>tag</em> n√£o funcionando √© do <code>ingres-controller</code> sendo utilizado. Vamos clarificar!</p>
<p>Geralmente vamos ao <code>google.com</code> e procuramos pelas seguintes palavras &ldquo;kuberentes ingress controller&rdquo;, isso retornara 2 projetos <strong>Oficiais</strong>, por duas companhias diferentes.</p>
<ul>
<li><a href="https://docs.nginx.com/nginx-ingress-controller/">NGINX Ingress Controller for Kubernetes</a> by NGINX</li>
<li><a href="https://kubernetes.github.io/ingress-nginx/">Kubernetes Nginx Ingress Controller</a> by Kubernetes (Google)</li>
</ul>
<p>Durante o troubleshoot o primeiro passo √© definir qual <code>ingress-controller</code> do <strong>Nginx</strong> est√° sendo utilizado:</p>
<p>Com o <strong>helm</strong> podemos checar o repositorio do qual foi instalado:</p>
<p>Provided by NGINX</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>‚óã ‚Üí helm repo add nginx-stable https://helm.nginx.com/stable
</span></span><span style="display:flex;"><span>‚óã ‚Üí helm search hub nginx-ingress
</span></span><span style="display:flex;"><span>URL                                                     CHART VERSION   APP VERSION     DESCRIPTION                                       
</span></span><span style="display:flex;"><span>https://hub.helm.sh/charts/nginx/nginx-ingress          0.4.1           1.6.1           NGINX Ingress Controller                          
</span></span></code></pre></div><p>Provided by Kubernetes</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>‚óã ‚Üí helm repo add stable https://kubernetes-charts.storage.googleapis.com
</span></span><span style="display:flex;"><span>‚óã ‚Üí helm search hub nginx-ingress
</span></span><span style="display:flex;"><span>URL                                                     CHART VERSION   APP VERSION     DESCRIPTION                                       
</span></span><span style="display:flex;"><span>https://hub.helm.sh/charts/stable/nginx-ingress         1.29.3          0.27.1          An nginx Ingress controller that uses ConfigMap...
</span></span></code></pre></div><p>Alternativamente se a solucao nao foi instalada pelo <strong>helm</strong> podemos checar a origem da imagem do <code>ingres-controller</code> com o comando:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-bash" data-lang="bash"><span style="display:flex;"><span>‚óã ‚Üí kubectl describe deployment  | grep Image
</span></span><span style="display:flex;"><span>    Image:       quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.27.1
</span></span><span style="display:flex;"><span>    Image:       nginx/nginx-ingress:1.6.1
</span></span></code></pre></div><p>Do <a href="https://github.com/nginxinc/kubernetes-ingress/">NGINX Ingress Controller for Kubernetes</a>, GitHub confirmamos a propriadade da imagem <strong>nginx-ingress:1.6.1</strong>.</p>
<p>Do <a href="https://github.com/kubernetes/ingress-nginx/">Kubernetes Nginx Ingress Controller</a>, GitHub confirmamos a propriadade da imagem <strong>nginx-ingress-controller:0.27.1</strong>.</p>
<p>Agora que definimos o projeto que esta sendo utilizado vamos as configura√ß√µes:</p>
<h1 id="nginx-ingress-controller-for-kubernetes">NGINX Ingress Controller for Kubernetes</h1>
<p>Mantido pela NGINX a documenta√ß√£o pode ser encontrada em <a href="https://docs.nginx.com/nginx-ingress-controller/">Nginx Ingress Controller for Kubernetes</a>:</p>
<p>As tags para este projeto s√£o <code>nginx.org</code> e <code>nginx.com</code> para as fun√ß√µes pagas.</p>
<p>Exemplos explorando as fun√ß√µes deste projeto podem ser encontradas no <a href="https://github.com/nginxinc/kubernetes-ingress/tree/v1.6.1/examples">GitHub</a></p>
<p>Exemplo para fun√ß√µes rewrite:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-yaml" data-lang="yaml"><span style="display:flex;"><span><span style="color:#f92672">apiVersion</span>: <span style="color:#ae81ff">extensions/v1beta1</span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">kind</span>: <span style="color:#ae81ff">Ingress</span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">metadata</span>:
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">name</span>: <span style="color:#ae81ff">cafe-ingress</span>
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">annotations</span>:
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">nginx.org/rewrites</span>: <span style="color:#e6db74">&#34;serviceName=tea-svc rewrite=/&#34;</span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">spec</span>:
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">rules</span>:
</span></span><span style="display:flex;"><span>  - <span style="color:#f92672">host</span>: <span style="color:#ae81ff">cafe.example.com</span>
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">http</span>:
</span></span><span style="display:flex;"><span>      <span style="color:#f92672">paths</span>:
</span></span><span style="display:flex;"><span>      - <span style="color:#f92672">path</span>: <span style="color:#ae81ff">/tea/</span>
</span></span><span style="display:flex;"><span>        <span style="color:#f92672">backend</span>:
</span></span><span style="display:flex;"><span>          <span style="color:#f92672">serviceName</span>: <span style="color:#ae81ff">tea-svc</span>
</span></span><span style="display:flex;"><span>          <span style="color:#f92672">servicePort</span>: <span style="color:#ae81ff">80</span>
</span></span></code></pre></div><h1 id="kubernetes-nginx-ingress-controller">Kubernetes NGINX Ingress Controller</h1>
<p>Mantido pela comunidade do Kubernetes a documenta√ß√£o pode ser encontrada em<a href="https://kubernetes.github.io/ingress-nginx/">Kubernetes Nginx Ingress Controller</a>:</p>
<p>As tags para este projeto √© <code>nginx.ingress.kubernetes.io/</code> e n√£o possui fun√ß√µes extras.</p>
<p>Exemplos explorando as fun√ß√µes deste projeto podem ser encontradas no <a href="https://github.com/kubernetes/ingress-nginx/tree/master/docs/examples">GitHub</a></p>
<p>Exemplo para fun√ß√µes rewrite:</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-yaml" data-lang="yaml"><span style="display:flex;"><span><span style="color:#f92672">apiVersion</span>: <span style="color:#ae81ff">networking.k8s.io/v1beta1</span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">kind</span>: <span style="color:#ae81ff">Ingress</span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">metadata</span>:
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">name</span>: <span style="color:#ae81ff">cafe-ingress</span>
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">annotations</span>:
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">nginx.ingress.kubernetes.io/rewrite-target</span>: <span style="color:#ae81ff">/</span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">spec</span>:
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">rules</span>:
</span></span><span style="display:flex;"><span>  - <span style="color:#f92672">http</span>:
</span></span><span style="display:flex;"><span>      <span style="color:#f92672">paths</span>:
</span></span><span style="display:flex;"><span>      - <span style="color:#f92672">path</span>: <span style="color:#ae81ff">/tea</span>
</span></span><span style="display:flex;"><span>        <span style="color:#f92672">backend</span>:
</span></span><span style="display:flex;"><span>          <span style="color:#f92672">serviceName</span>: <span style="color:#ae81ff">tea-svc</span>
</span></span><span style="display:flex;"><span>          <span style="color:#f92672">servicePort</span>: <span style="color:#ae81ff">80</span>
</span></span></code></pre></div><hr>
<p>Estes projetos s√£o alguns meses de diferen√ßa e n√£o h√° uma explica√ß√£o clara do porque o Kubernetes Ingress Controller escolheu exatamente o nesmo nome do projeto do NGINX que j√° estava sendo mantido.</p>
<p>Em resumo, os nomes s√£o muito similares e em um &ldquo;Bag of Words&rdquo; eles poderiam ser considerado os mesmos, ent√£o fica esse alerta para n√£o fazer deploy de <em>bananas</em> pensando que s√£o <em>ma√ßas</em>.</p>
]]></content>
        </item>
        
        <item>
            <title>A maneira mais r√°pida de deletar um grande n√∫mero arquivos</title>
            <link>https://hugoprudente.github.io/pt-br/posts/a-maneira-mais-rapida-de-deletar-um-grande-numero-de-arquivos/</link>
            <pubDate>Fri, 10 Jan 2020 10:38:03 +0000</pubDate>
            
            <guid>https://hugoprudente.github.io/pt-br/posts/a-maneira-mais-rapida-de-deletar-um-grande-numero-de-arquivos/</guid>
            <description>Muitos anos atr√°s, devido a um erro no c√≥digo da aplica√ß√£o que trabalhavamos acabamos gerando aproximadamente 10 milh√µes de arquivos, acabando com os inodes do sistema. Devido aquele servidor n√£o ter alta disponibilidade no momento fui a procura do ganso dos ovos de ouro e achei isso aqui.
Infelizmente o artigo original n√£o est√° mais dispon√≠vel, mas desse em dia em diante rsync √© minha ferramenta principal de destrui√ß√£o em massa!</description>
            <content type="html"><![CDATA[<p>Muitos anos atr√°s, devido a um erro no c√≥digo da aplica√ß√£o que trabalhavamos acabamos gerando aproximadamente 10 milh√µes de arquivos, acabando com os <code>inodes</code> do sistema. Devido aquele servidor n√£o ter alta disponibilidade no momento fui a procura do ganso dos ovos de ouro e achei isso aqui.</p>
<p>Infelizmente o artigo original n√£o est√° mais dispon√≠vel, mas desse em dia em diante <code>rsync</code> √© minha ferramenta principal de destrui√ß√£o em massa!</p>
<hr>
<h2 id="benchmark">Benchmark</h2>
<p>Alguns dias atr√°s,  <a href="https://www.quora.com/profile/Keith-Winstein">Keith-Winstein</a> respondeu o <a href="https://www.quora.com/How-can-someone-rapidly-delete-400-000-files">Quora Posts</a>, informando que meu benchmark n√£o poderia ser reproduzido e que os tempos de delec√ß√£o estavam muito lentos. Para ficar mais claro, pois naquele momento me computador poderia estar sobre carga, e poderia conter alguns erros eu refiz. Agora com uma nova m√°quina de rack, usando o  <code>/usr/bin/time</code> para um resultado mais refinado.</p>
<p>(O n√∫mero de arquivos √© 1000000. E cada um cont√©m 0 de tamanho.)</p>
<table>
<thead>
<tr>
<th>Command</th>
<th>Elapsed</th>
<th>System Time</th>
<th>%CPU</th>
<th>cs (Vol/Invol)</th>
</tr>
</thead>
<tbody>
<tr>
<td>rsync -a ‚Äìdelete empty/ a</td>
<td>10.60</td>
<td>1.31</td>
<td>95</td>
<td>106/22</td>
</tr>
<tr>
<td>find b/ -type f -delete</td>
<td>28.51</td>
<td>14.46</td>
<td>52</td>
<td>14849/11</td>
</tr>
<tr>
<td>find c/ -type f | xargs -L 100 rm</td>
<td>41.69</td>
<td>20.60</td>
<td>54</td>
<td>37048/15074</td>
</tr>
<tr>
<td>find d/ -type f | xargs -L 100 -P 100 rm</td>
<td>34.32</td>
<td>27.82</td>
<td>89</td>
<td>929897/21720</td>
</tr>
<tr>
<td>rm -rf f</td>
<td>31.29</td>
<td>14.80</td>
<td>47</td>
<td>15134/11</td>
</tr>
</tbody>
</table>
<h3 id="sa√≠da-original">Sa√≠da Original</h3>
<pre tabindex="0"><code># method 1
~/test $ /usr/bin/time -v  rsync -a --delete empty/ a/
        Command being timed: &#34;rsync -a --delete empty/ a/&#34;
        User time (seconds): 1.31
        System time (seconds): 10.60
        Percent of CPU this job got: 95%
        Elapsed (wall clock) time (h:mm:ss or m:ss): 0:12.42
        Average shared text size (kbytes): 0
        Average unshared data size (kbytes): 0
        Average stack size (kbytes): 0
        Average total size (kbytes): 0
        Maximum resident set size (kbytes): 0
        Average resident set size (kbytes): 0
        Major (requiring I/O) page faults: 0
        Minor (reclaiming a frame) page faults: 24378
        Voluntary context switches: 106
        Involuntary context switches: 22
        Swaps: 0
        File system inputs: 0
        File system outputs: 0
        Socket messages sent: 0
        Socket messages received: 0
        Signals delivered: 0
        Page size (bytes): 4096
        Exit status: 0

# method 2
        Command being timed: &#34;find b/ -type f -delete&#34;
        User time (seconds): 0.41
        System time (seconds): 14.46
        Percent of CPU this job got: 52%
        Elapsed (wall clock) time (h:mm:ss or m:ss): 0:28.51
        Average shared text size (kbytes): 0
        Average unshared data size (kbytes): 0
        Average stack size (kbytes): 0
        Average total size (kbytes): 0
        Maximum resident set size (kbytes): 0
        Average resident set size (kbytes): 0
        Major (requiring I/O) page faults: 0
        Minor (reclaiming a frame) page faults: 11749
        Voluntary context switches: 14849
        Involuntary context switches: 11
        Swaps: 0
        File system inputs: 0
        File system outputs: 0
        Socket messages sent: 0
        Socket messages received: 0
        Signals delivered: 0
        Page size (bytes): 4096
        Exit status: 0
# method 3
find c/ -type f | xargs -L 100 rm
~/test $ /usr/bin/time -v ./delete.sh
        Command being timed: &#34;./delete.sh&#34;
        User time (seconds): 2.06
        System time (seconds): 20.60
        Percent of CPU this job got: 54%
        Elapsed (wall clock) time (h:mm:ss or m:ss): 0:41.69
        Average shared text size (kbytes): 0
        Average unshared data size (kbytes): 0
        Average stack size (kbytes): 0
        Average total size (kbytes): 0
        Maximum resident set size (kbytes): 0
        Average resident set size (kbytes): 0
        Major (requiring I/O) page faults: 0
        Minor (reclaiming a frame) page faults: 1764225
        Voluntary context switches: 37048
        Involuntary context switches: 15074
        Swaps: 0
        File system inputs: 0
        File system outputs: 0
        Socket messages sent: 0
        Socket messages received: 0
        Signals delivered: 0
        Page size (bytes): 4096
        Exit status: 0

# method 4
find d/ -type f | xargs -L 100 -P 100 rm
~/test $ /usr/bin/time -v ./delete.sh
        Command being timed: &#34;./delete.sh&#34;
        User time (seconds): 2.86
        System time (seconds): 27.82
        Percent of CPU this job got: 89%
        Elapsed (wall clock) time (h:mm:ss or m:ss): 0:34.32
        Average shared text size (kbytes): 0
        Average unshared data size (kbytes): 0
        Average stack size (kbytes): 0
        Average total size (kbytes): 0
        Maximum resident set size (kbytes): 0
        Average resident set size (kbytes): 0
        Major (requiring I/O) page faults: 0
        Minor (reclaiming a frame) page faults: 1764278
        Voluntary context switches: 929897
        Involuntary context switches: 21720
        Swaps: 0
        File system inputs: 0
        File system outputs: 0
        Socket messages sent: 0
        Socket messages received: 0
        Signals delivered: 0
        Page size (bytes): 4096
        Exit status: 0

# method 5
~/test $ /usr/bin/time -v rm -rf f
        Command being timed: &#34;rm -rf f&#34;
        User time (seconds): 0.20
        System time (seconds): 14.80
        Percent of CPU this job got: 47%
        Elapsed (wall clock) time (h:mm:ss or m:ss): 0:31.29
        Average shared text size (kbytes): 0
        Average unshared data size (kbytes): 0
        Average stack size (kbytes): 0
        Average total size (kbytes): 0
        Maximum resident set size (kbytes): 0
        Average resident set size (kbytes): 0
        Major (requiring I/O) page faults: 0
        Minor (reclaiming a frame) page faults: 176
        Voluntary context switches: 15134
        Involuntary context switches: 11
        Swaps: 0
        File system inputs: 0
        File system outputs: 0
        Socket messages sent: 0
        Socket messages received: 0
        Signals delivered: 0
        Page size (bytes): 4096
        Exit status: 0
</code></pre><h3 id="especifica√ß√£o-do-hardware">Especifica√ß√£o do Hardware</h3>
<pre tabindex="0"><code>Summary:        HP DL360 G7, 2 x Xeon E5620 2.40GHz, 23.5GB / 24GB 1333MHz
Processors:     2 (of 16) x Xeon E5620 2.40GHz (16 cores)
Memory:         23.5GB
Disk:           cciss/c0d0 (cciss0): 300GB (4%) RAID-10
Disk-Control:   cciss0: Hewlett-Packard Company Smart Array G6 controllers, FW 3.66
OS:             RHEL Server 5.4 (Tikanga), Linux 2.6.18-164.el5 x86_64, 64-bit
</code></pre><h2 id="benchmark-inicial">Benchmark Inicial</h2>
<p>Ontem eu vi um post muito interessante sobre m√©todos de deletar arquivos em um √∫nico diret√≥rio. O metodo foi enviado por Zhenyu Lee no <a href="http://www.quora.com/How-can-someone-rapidly-delete-400-000-files">http://www.quora.com/How-can-someone-rapidly-delete-400-000-files</a> e invez de utilizar xargs, Lee engenhosamente usou rsync com o &ndash;delete para sincronizar com um diretorio vazio. Ap√≥s isso eu fiz uma comparacao de metodos e para minha surpresa o m√©todo de Lee era muito, mais muito, mais r√°pido que os outros.</p>
<table>
<thead>
<tr>
<th>Command</th>
<th># of files</th>
<th>Elapsed</th>
</tr>
</thead>
<tbody>
<tr>
<td>rsync -a ‚Äìdelete empty/ s1</td>
<td>1000000</td>
<td>6m50.638s</td>
</tr>
<tr>
<td>find s2/ -type f -delete</td>
<td>1000000</td>
<td>87m38.826s</td>
</tr>
<tr>
<td>find s3/ -type f | xargs -L 100 rm</td>
<td>1000000</td>
<td>83m36.851s</td>
</tr>
<tr>
<td>find s4/ -type f | xargs -L 100 -P 100 rm</td>
<td>1000000</td>
<td>78m4.658s</td>
</tr>
<tr>
<td>rm -rf s5</td>
<td>1000000</td>
<td>80m33.434s</td>
</tr>
</tbody>
</table>
<h3 id="especifica√ß√£o-do-hardware-1">Especifica√ß√£o do Hardware</h3>
<pre tabindex="0"><code>CPU: Intel(R) Core(TM)2 Duo CPU E8400 @ 3.00GHz
MEM: 4G
HD: ST3250318AS: 250G/7200RPM
</code></pre><h2 id="notas-de-rodap√©">Notas de Rodap√©</h2>
<p>[1]: Voluntary Context Switches e Involuntary Context Switches s√£o do /usr/bin/time</p>
<p>[2]: Como h√° uma pipeline, para o resultado ser o mais √°curo possivel ele foi envolto num bash script.</p>
<p>Original Post: <a href="http://linuxnote.net/jianingy/en/linux/a-fast-way-to-remove-huge-number-of-files.html">http://linuxnote.net/jianingy/en/linux/a-fast-way-to-remove-huge-number-of-files.html</a></p>
]]></content>
        </item>
        
        <item>
            <title>Sysadmin Devops Tools and Frameworks</title>
            <link>https://hugoprudente.github.io/pt-br/posts/sysadmin-devops-tools-and-frameworks/</link>
            <pubDate>Thu, 05 Dec 2019 02:21:55 +0000</pubDate>
            
            <guid>https://hugoprudente.github.io/pt-br/posts/sysadmin-devops-tools-and-frameworks/</guid>
            <description>O quanto dificil como SysAdmin/DevOps √© se manter atualizado em todas as ferramentas, plataformas e frameworks dispon√≠veis no mercado?
3 anos atr√°s, Jeferson Norona #LinuxTips (VAI), postou em suas redes sociais sobre um projeto onde reune e consolida as principais ferramentas e frameworks para facilitar a vida do SysAdmin/DevOps.
O projeto foi criado por Alen Krmelj e √© magn√≠fico!
http://sysadmin.it-landscape.info/</description>
            <content type="html"><![CDATA[<p>O quanto dificil como SysAdmin/DevOps √© se manter atualizado em todas as ferramentas, plataformas e frameworks dispon√≠veis no mercado?</p>
<p>3 anos atr√°s, <a href="https://twitter.com/badtux_">Jeferson Norona</a> #LinuxTips (VAI), postou em suas redes sociais sobre um projeto onde reune e consolida as principais ferramentas e frameworks para facilitar a vida do SysAdmin/DevOps.</p>
<p>O projeto foi criado por <a href="blackbird.si">Alen Krmelj</a> e √© magn√≠fico!</p>
<p><img src="/2019/12/itlandscape.png" alt="itlandscape.png"></p>
<p><a href="http://sysadmin.it-landscape.info/">http://sysadmin.it-landscape.info/</a></p>
]]></content>
        </item>
        
    </channel>
</rss>
